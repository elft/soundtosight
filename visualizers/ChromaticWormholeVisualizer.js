class ChromaticWormholeVisualizer extends BaseVisualizer{static meta={description:"Hyperspace tunnel of rotating bands and starlight bursts built for adrenaline builds.",tags:["edm","psytrance","space","heavy bass"]};constructor(t,e){super(t,{backgroundColor:"#040a17",force2d:!0,...e})}async init(){this.centerX=this.width/2,this.centerY=this.height/2,this.minTunnelRadius=.14*Math.min(this.width,this.height),this.maxTunnelRadius=.55*Math.hypot(this.width,this.height),this.backdropCanvas=document.createElement("canvas"),this.backdropCtx=this.backdropCanvas.getContext("2d"),this._resizeBackdrop(),this.energy={subBass:0,bass:0,lowMid:0,mid:0,upperMid:0,presence:0,treble:0,brilliance:0,ultrasonic:0,overall:0},this.colorState={baseHue:210,targetBaseHue:210,accentHue:36,targetAccentHue:36,rimHue:260},this.motion={rotation:0,rotationSpeed:.05,rotationSpeedTarget:.05,rotationDir:1,rotationDirTarget:1,sway:0,swayTarget:0,zoom:1,zoomTarget:1,twist:.12,twistTarget:.12,pulse:0,pulseTarget:0},this.depthDrift=.2,this.depthDriftTarget=.2,this.tunnelBands=this._initTunnelBands(9),this.rays=this._initRays(7),this.starStreams=this._initStarStreams(68),this.waveBursts=[],this.starfield={stretch:.22,targetStretch:.22,intensity:.24,targetIntensity:.24,drift:0,targetDrift:0,speed:1,targetSpeed:1,sharpness:.65,targetSharpness:.65},this.time=0,this.lastRenderTime=performance.now(),this.scene={exposure:.32,exposureTarget:.32,dropFlash:0,aberration:0,chromaBloom:0,sectionSeed:1e3*Math.random()|0,motif:0,sectionTime:0},this.core={proximity:.4,targetProximity:.4,centroidSmooth:600,elastic:0,elasticPhase:0,slank:0},this._lastUpdateTime=.001*performance.now()}onResize(){this.centerX=this.width/2,this.centerY=this.height/2,this.minTunnelRadius=.14*Math.min(this.width,this.height),this.maxTunnelRadius=.55*Math.hypot(this.width,this.height),this._resizeBackdrop()}_resizeBackdrop(){const t=Math.max(16,Math.round(.35*this.width)),e=Math.max(16,Math.round(.35*this.height));this.backdropCanvas.width=t,this.backdropCanvas.height=e}_initTunnelBands(t){const e=[];for(let s=0;s<t;s++){const i=(s+1)/t,r=this.minTunnelRadius+i*this.maxTunnelRadius*.5;e.push({index:s,depth:i,targetDepth:i,radius:r,targetRadius:r,thickness:.03,targetThickness:.03,warp:.12,targetWarp:.12,brightness:.2,targetBrightness:.2,hueOffset:50*(Math.random()-.5),phase:Math.random()*Math.PI*2,spin:.24+.5*Math.random(),flicker:.18,segments:42,seed:1e3*Math.random()})}return e}_initRays(t){const e=[];for(let s=0;s<t;s++){const i=s/t*Math.PI*2;e.push({angle:i,phase:Math.random()*Math.PI*2,width:.04,targetWidth:.04,length:.55,targetLength:.55,intensity:.2,targetIntensity:.2,hueOffset:60*(Math.random()-.5),sway:0,swayTarget:0})}return e}_initStarStreams(t){const e=[];for(let s=0;s<t;s++)e.push(this._resetStarStream({}));return e}_resetStarStream(t){return t.x=1.6*(Math.random()-.5),t.y=1.6*(Math.random()-.5),t.depth=.8*Math.random()+.2,t.speed=.32+.6*Math.random(),t.stretch=.18+.22*Math.random(),t.brightness=.22+.3*Math.random(),t.phase=Math.random()*Math.PI*2,t.twist=.6*(Math.random()-.5),t}_safe(t,e=0){return Number.isFinite(t)?t:e}_getCentroidHz(t,e=240){const s=t?.centroid;if(Number.isFinite(s))return this.constrain(s,40,2e4);const i=t?.spectralCentroidNormalized;if(Number.isFinite(i)){const t=40,e=2e4;return this.constrain(t+i*(e-t),t,e)}const r=t?.dominantFreqPrecise??t?.dominantFreq;return Number.isFinite(r)?this.constrain(r,40,2e4):this.constrain(this._safe(e,400),40,2e4)}_updateBackdrop(){const t=this.backdropCanvas.width,e=this.backdropCanvas.height;if(0===t||0===e)return;const s=this.backdropCtx;s.setTransform(1,0,0,1,0,0),s.clearRect(0,0,t,e);const i=s.createRadialGradient(t/2,e/2,.12*t,t/2,e/2,.8*Math.max(t,e));i.addColorStop(0,`hsla(${this.colorState.accentHue}, 68%, 58%, 0.22)`),i.addColorStop(1,`hsla(${(this.colorState.baseHue+210)%360}, 45%, 12%, 0)`),s.fillStyle=i,s.fillRect(0,0,t,e);const r=s.createLinearGradient(0,0,t,e);r.addColorStop(0,`hsla(${(this.colorState.baseHue+180)%360}, 44%, 16%, 0.22)`),r.addColorStop(1,`hsla(${(this.colorState.accentHue+40)%360}, 48%, 21%, 0.2)`),s.globalCompositeOperation="lighter",s.fillStyle=r,s.fillRect(0,0,t,e),s.globalCompositeOperation="source-over"}onUpdate(t={}){const e=.001*performance.now(),s=this.constrain(e-this._lastUpdateTime,1/240,.1);this._lastUpdateTime=e,this.scene.sectionTime+=s;const i=1-Math.exp(8*-s);this.energy.subBass=this.lerp(this.energy.subBass,this._safe(t.subBassEnergy,0),i),this.energy.bass=this.lerp(this.energy.bass,this._safe(t.bassEnergy,0),i),this.energy.lowMid=this.lerp(this.energy.lowMid,this._safe(t.lowMidEnergy,0),i),this.energy.mid=this.lerp(this.energy.mid,this._safe(t.midEnergy,0),i),this.energy.upperMid=this.lerp(this.energy.upperMid,this._safe(t.upperMidEnergy,0),i),this.energy.presence=this.lerp(this.energy.presence,this._safe(t.presenceEnergy,0),i),this.energy.treble=this.lerp(this.energy.treble,this._safe(t.trebleEnergy,0),i),this.energy.brilliance=this.lerp(this.energy.brilliance,this._safe(t.brillianceEnergy,0),i),this.energy.ultrasonic=this.lerp(this.energy.ultrasonic,this._safe(t.ultrasonicEnergy,0),i);const r=this._safe(t.overallEnergy,this._safe(t.rms,0));this.energy.overall=this.lerp(this.energy.overall,r,i);const a=this.audioTriggers||{},h=Number.isFinite(t.loudnessShortDb)?t.loudnessShortDb:this._safe(t?.aWeighted?.mono?.db,-60),o=this.dbTo01(h),n=this.constrain(.18+.55*o+.3*this.energy.overall,.18,.85);this.scene.exposureTarget=n,this.scene.exposure=this.lerp(this.scene.exposure,this.scene.exposureTarget,.1);const l=this._safe(t.dominantFreq,240),c=this.constrain(this.map(Math.log(Math.max(30,l)),Math.log(40),Math.log(16e3),0,1),0,1),d=this._getCentroidHz(t,l);this.core.centroidSmooth=this.lerp(this.core.centroidSmooth,d,.12);const p=Math.max(0,Math.log1p(this.core.centroidSmooth)-Math.log1p(40)),m=this.constrain(.28+.18*p,.28,1.6);if(m<this.core.targetProximity-.04){const t=this.core.targetProximity-m;this.core.elastic=Math.min(.9,this.core.elastic+t*(.6+.45*this.energy.presence+.25*this.scene.exposure)),this.core.elasticPhase=0}const g=this.core.targetProximity<m?.32:.18;this.core.targetProximity=this.lerp(this.core.targetProximity,m,g);const u=1-Math.exp(8*-s),f=1-Math.exp(3.2*-s),y=this.core.targetProximity>this.core.proximity?u:f;this.core.proximity=this.lerp(this.core.proximity,this.core.targetProximity,y),this.core.elastic>.001?(this.core.elasticPhase+=s*(4.2+2.6*this.energy.presence+1.4*this.scene.exposure),this.core.elastic*=Math.exp(-s*(2.4+1.5*this.energy.brilliance)),this.core.slank=Math.sin(this.core.elasticPhase)*this.core.elastic):(this.core.slank*=Math.exp(5.4*-s),this.core.elastic=0);const M=this._safe(t.percussiveRatio,.4*this.energy.subBass+.4*this.energy.bass),b=(this._safe(t.harmonicEnergy,this.energy.mid),this._safe(t.stereoBalance,0)),S=this._safe(t.tempoConfidence,0),x=this._safe(t.tempo,128),w=this.constrain((x-100)/120,-.5,1.5),T=this.constrain(.6*S+Math.max(0,w),0,1.8);this.colorState.targetBaseHue=(200+130*c-45*this.energy.lowMid+80*this.energy.brilliance)%360,this.colorState.targetAccentHue=(this.colorState.targetBaseHue+100+70*this.energy.presence+60*M)%360,this.colorState.baseHue=this._lerpHue(this.colorState.baseHue,this.colorState.targetBaseHue,.06),this.colorState.accentHue=this._lerpHue(this.colorState.accentHue,this.colorState.targetAccentHue,.08),this.colorState.rimHue=(this.colorState.baseHue+210)%360,this.motion.rotationSpeedTarget=.03+.4*this.energy.lowMid+.28*this.energy.mid+.2*this.scene.exposure,this.motion.rotationDirTarget=this.constrain(1.4*b+.35*Math.sin(.25*this.time),-1,1),this.motion.zoomTarget=1+.3*this.energy.subBass+.22*this.energy.overall+.18*M,this.motion.swayTarget=.8*(this.energy.presence-.5),this.motion.twistTarget=.08+.25*this.energy.upperMid+.22*Math.abs(b),this.motion.pulseTarget=Math.max(this.motion.pulseTarget*Math.exp(2.8*-s),.45*this.energy.bass+.65*this.energy.subBass),this.depthDriftTarget=.18+.35*this.energy.mid+.18*this.energy.presence+.12*M,this.starfield.targetStretch=.16+.7*this.energy.treble+.35*this.energy.brilliance,this.starfield.targetIntensity=.16+.45*this.energy.treble+.35*this.energy.presence+.3*this.scene.chromaBloom,this.starfield.targetDrift=.45*b,this.starfield.targetSpeed=this.constrain(.9+.7*T+.4*this.energy.overall,.6,2.6),this.starfield.targetSharpness=this.constrain(.5+.25*S+.22*Math.max(0,w)-.08*this.scene.chromaBloom,.36,.95),a.dropStart&&(this.scene.dropFlash=Math.max(this.scene.dropFlash,.85+.4*this.energy.subBass),this.scene.aberration=Math.max(this.scene.aberration,.35+.3*S),this.scene.chromaBloom=Math.max(this.scene.chromaBloom,.5+.4*M),this._advanceSection(.9)),a.dropBloom&&(this.scene.chromaBloom=Math.max(this.scene.chromaBloom,.3+.4*this._safe(a.dropScore,.3))),a.melodyChange&&this._safe(a.melodyChangeScore,0)>.65&&this._advanceSection(.7);const B=S>.6?24:32,_=60/Math.max(40,x)*B;this.scene.sectionTime>_&&this._advanceSection(.55),this.scene.dropFlash=Math.max(0,this.scene.dropFlash-1.6*s),this.scene.aberration=Math.max(0,this.scene.aberration-1.2*s),this.scene.chromaBloom=Math.max(0,this.scene.chromaBloom-.9*s);for(let t=0;t<this.tunnelBands.length;t++){const e=this.tunnelBands[t],s=(t+1)/this.tunnelBands.length,i=this.motion.pulseTarget*(1-s)*.2-.04*this.depthDrift;e.targetDepth=this.constrain(s+i,.06,1.1),e.targetRadius=this.minTunnelRadius+s*this.maxTunnelRadius*this.motion.zoom;const r=(.1+.28*this.energy.brilliance+.2*(1-s))*(.7+.6*this.scene.exposure);e.targetThickness=.018+.03*this.energy.bass+.028*(1-s),e.targetWarp=.09+.24*this.energy.upperMid+.2*this.scene.chromaBloom,e.targetBrightness=this.constrain(r,.06,.42+.2*this.scene.chromaBloom),e.hueOffset=this.lerp(e.hueOffset,30*Math.sin(.35*this.time+e.seed)+25*this.energy.presence,.1),e.flicker=this.lerp(e.flicker,.16+.5*this.energy.treble+.3*this.scene.chromaBloom,.12)}for(const t of this.rays)t.targetWidth=.018+.06*this.energy.presence+.04*this.scene.chromaBloom,t.targetLength=.45+.38*this.energy.mid+.3*this.energy.brilliance,t.targetIntensity=(.14+.45*this.energy.treble+.3*this.scene.exposure)*(.7+.5*this.scene.chromaBloom),t.swayTarget=.55*(this.energy.upperMid-.5),t.hueOffset=this.lerp(t.hueOffset,35*Math.sin(.6*this.time+t.phase)+28*this.energy.presence,.1);const v=t.fluxByBand||[],C=this.constrain(.5*((v[0]??0)+(v[1]??0)),0,1),R=this.constrain(.5*((v[3]??0)+(v[4]??0)),0,1),k=this.constrain(.5*((v[6]??0)+(v[7]??0)),0,1);(C>.55||this.energy.subBass>.55)&&r>.35&&Math.random()<.16&&this.waveBursts.push({progress:0,alpha:.2+.35*C,width:.01+.04*C,hueShift:40*(Math.random()-.5),rotation:Math.random()*Math.PI*2,spread:.8+.7*this.energy.presence}),R>.5&&Math.random()<.12&&this.waveBursts.push({progress:0,alpha:.16+.25*R,width:.008+.03*R,hueShift:110+50*(Math.random()-.5),rotation:Math.random()*Math.PI*2,spread:.6+.7*this.energy.brilliance}),k>.55&&Math.random()<.2&&this.waveBursts.push({progress:0,alpha:.12+.18*k,width:.006+.02*k,hueShift:160+70*(Math.random()-.5),rotation:Math.random()*Math.PI*2,spread:.5+.6*this.energy.treble})}onRender(){const t=this.ctx;if(!t)return;const e=performance.now(),s=Math.min(.06,(e-this.lastRenderTime)/1e3);this.lastRenderTime=e,this.time+=s,this.motion.rotationSpeed=this.lerp(this.motion.rotationSpeed,this.motion.rotationSpeedTarget,.08),this.motion.rotationDir=this.lerp(this.motion.rotationDir,this.motion.rotationDirTarget,.08),this.motion.sway=this.lerp(this.motion.sway,this.motion.swayTarget,.06),this.motion.zoom=this.lerp(this.motion.zoom,this.motion.zoomTarget,.07),this.motion.twist=this.lerp(this.motion.twist,this.motion.twistTarget,.08),this.motion.pulse=this.lerp(this.motion.pulse,this.motion.pulseTarget,.12),this.depthDrift=this.lerp(this.depthDrift,this.depthDriftTarget,.08),this.starfield.stretch=this.lerp(this.starfield.stretch,this.starfield.targetStretch,.1),this.starfield.intensity=this.lerp(this.starfield.intensity,this.starfield.targetIntensity,.1),this.starfield.drift=this.lerp(this.starfield.drift,this.starfield.targetDrift,.08),this.starfield.speed=this.lerp(this.starfield.speed,this.starfield.targetSpeed,.12),this.starfield.sharpness=this.lerp(this.starfield.sharpness,this.starfield.targetSharpness,.14),this.motion.rotation+=this.motion.rotationSpeed*this.motion.rotationDir*s*(.9+.8*this.motion.pulse),this.motion.rotation>2*Math.PI&&(this.motion.rotation-=2*Math.PI),this.motion.rotation<2*-Math.PI&&(this.motion.rotation+=2*Math.PI),t.setTransform(1,0,0,1,0,0),t.clearRect(0,0,this.width,this.height),t.fillStyle="#040a17",t.fillRect(0,0,this.width,this.height),this._renderBackdrop(t,this.width,this.height),this._renderWaveBursts(t,s),this._renderTunnel(t,s),this._renderRays(t,s),this._renderStarStreams(t,s),this._renderCore(t),this._renderOverlays(t)}_renderBackdrop(t,e,s){this._updateBackdrop(),t.save(),t.globalCompositeOperation="lighter",t.globalAlpha=.25+.35*this.scene.exposure+.2*this.scene.chromaBloom,t.drawImage(this.backdropCanvas,0,0,this.backdropCanvas.width,this.backdropCanvas.height,0,0,e,s),t.restore(),this.scene.dropFlash>.05&&(t.save(),t.globalCompositeOperation="screen",t.globalAlpha=.25*this.scene.dropFlash,t.fillStyle=`hsla(${(this.colorState.accentHue+200)%360}, 90%, 70%, 1)`,t.fillRect(0,0,e,s),t.restore())}_renderTunnel(t,e){t.save(),t.translate(this.centerX,this.centerY),t.rotate(.6*this.motion.rotation);for(const s of this.tunnelBands){s.depth=this.lerp(s.depth,s.targetDepth,.1),s.radius=this.lerp(s.radius,s.targetRadius,.1),s.thickness=this.lerp(s.thickness,s.targetThickness,.12),s.warp=this.lerp(s.warp,s.targetWarp,.12),s.brightness=this.lerp(s.brightness,s.targetBrightness,.13),s.phase+=e*(.6*s.spin+.8*this.motion.rotationSpeed);const i=this.constrain(1-s.depth,0,1),r=Math.max(8,s.radius)*(.8+.5*i),a=s.segments;t.save(),t.rotate(s.phase),t.beginPath();for(let e=0;e<=a;e++){const h=e/a*Math.PI*2,o=r*(1+Math.sin(h*(4+4*i)+s.seed)*s.warp+Math.sin(2*h+this.motion.rotation)*this.motion.twist*.5),n=Math.cos(h)*o,l=Math.sin(h)*o*(1-.35*this.motion.sway);0===e?t.moveTo(n,l):t.lineTo(n,l)}t.closePath();const h=(this.colorState.baseHue+s.hueOffset)%360,o=this.constrain((.05+s.brightness*(.22+.5*this.scene.exposure))*(.7+.4*this.scene.chromaBloom),.04,.45);t.fillStyle=`hsla(${h}, 64%, ${28+26*s.brightness+20*this.scene.exposure}%, ${o})`,t.fill(),t.lineWidth=Math.max(1,s.thickness*r*.1),t.strokeStyle=`hsla(${(h+180)%360}, 58%, ${40+20*i+18*this.scene.exposure}%, ${.4*o})`,t.stroke(),t.restore()}t.restore()}_renderOverlays(t){if(this.scene.aberration>.02){const e=12*this.scene.aberration;t.save(),t.globalCompositeOperation="screen",t.globalAlpha=.15*this.scene.aberration,t.fillStyle="rgba(160, 40, 255, 0.6)",t.fillRect(-e,0,this.width,this.height),t.fillStyle="rgba(40, 220, 255, 0.5)",t.fillRect(e,0,this.width,this.height),t.restore()}t.save();const e=this.constrain(.2+.35*(1-this.scene.exposure),.15,.45),s=t.createRadialGradient(this.centerX,this.centerY,.35*Math.min(this.width,this.height),this.centerX,this.centerY,.75*Math.max(this.width,this.height));if(s.addColorStop(0,"rgba(0,0,0,0)"),s.addColorStop(1,`rgba(0,0,0,${e})`),t.fillStyle=s,t.fillRect(0,0,this.width,this.height),t.restore(),this.scene.chromaBloom>.1){t.save(),t.globalAlpha=.02+.05*this.scene.chromaBloom,t.fillStyle="rgba(255,255,255,0.6)";for(let e=0;e<60;e++){const e=Math.random()*this.width,s=Math.random()*this.height,i=1+1.5*Math.random();t.fillRect(e,s,i,i)}t.restore()}}_renderRays(t,e){t.save(),t.translate(this.centerX,this.centerY);const s=this.minTunnelRadius*(.75+.2*this.motion.pulse),i=.6*this.maxTunnelRadius;for(const r of this.rays){r.width=this.lerp(r.width,r.targetWidth,.1),r.length=this.lerp(r.length,r.targetLength,.1),r.intensity=this.lerp(r.intensity,r.targetIntensity,.1),r.sway=this.lerp(r.sway,r.swayTarget,.08),r.phase+=e*(.6+1.5*this.motion.rotationSpeed+.8*this.motion.pulse);const a=r.angle+.3*this.motion.rotation+.25*Math.sin(r.phase)+r.sway,h=r.width,o=s,n=Math.min(i,o+i*r.length),l=(this.colorState.accentHue+r.hueOffset)%360;t.beginPath(),t.moveTo(Math.cos(a-h)*o,Math.sin(a-h)*o),t.lineTo(Math.cos(a)*n,Math.sin(a)*n*(1-.4*this.motion.sway)),t.lineTo(Math.cos(a+h)*o,Math.sin(a+h)*o),t.closePath();const c=(.06+.35*r.intensity)*(.7+.6*this.scene.exposure+.6*this.scene.chromaBloom);t.fillStyle=`hsla(${l}, 70%, ${45+25*this.scene.exposure}%, ${this.constrain(c,.06,.55)})`,t.fill()}t.restore()}_renderStarStreams(t,e){t.save(),t.globalCompositeOperation="screen",t.globalAlpha=.68;const s=this.constrain(this.starfield.speed,.6,2.8),i=this.constrain(this.starfield.sharpness,.36,.95),r=this.constrain((i-.36)/.59,0,1);for(const a of this.starStreams){if(a.depth-=e*(.3+1.2*this.depthDrift)*a.speed*s,a.depth<=.05){this._resetStarStream(a),a.depth+=.8;continue}a.phase+=e*(.5+.9*this.motion.rotationSpeed);const h=1/(1.4*a.depth);if(a.x+=this.starfield.drift*e*.4,a.y+=Math.sin(a.phase)*e*.2,Math.abs(a.x)>1.8||Math.abs(a.y)>1.8){this._resetStarStream(a);continue}const o=this.centerX+a.x*this.width*.28*h,n=this.centerY+a.y*this.height*.28*h,l=a.stretch*h*this.starfield.stretch*this.maxTunnelRadius*.02,c=Math.max(1.1,l*(1.18-.55*r)),d=Math.max(.45,c*(.22-.08*r)),p=(this.colorState.rimHue+25*Math.sin(a.phase+a.twist))%360;t.save(),t.translate(o,n),t.rotate(Math.atan2(n-this.centerY,o-this.centerX)+.3*this.motion.sway);const m=t.createLinearGradient(0,.5*-c,0,.5*c),g=(.12+this.starfield.intensity*a.brightness*.55)*(.5+.6*this.scene.exposure+.35*this.scene.chromaBloom),u=this.constrain(g*(.85+.3*i),.04,.6);m.addColorStop(0,`hsla(${p}, 68%, 58%, 0)`),m.addColorStop(.35,`hsla(${p}, 74%, 56%, ${.55*u})`),m.addColorStop(.55,`hsla(${p}, 78%, 60%, ${u})`),m.addColorStop(1,`hsla(${(p+16)%360}, 76%, 64%, 0)`),t.fillStyle=m,t.fillRect(.5*-d,.5*-c,d,c),t.globalAlpha*=.8+.15*r,t.lineWidth=Math.max(.4,d*(.35-.15*r)),t.strokeStyle=`hsla(${(p+12)%360}, 82%, ${65+10*r}%, ${.75*u})`,t.beginPath(),t.moveTo(0,.45*-c),t.lineTo(0,.45*c),t.stroke(),t.restore()}t.restore()}_renderWaveBursts(t,e){if(0!==this.waveBursts.length){t.save(),t.translate(this.centerX,this.centerY),t.globalCompositeOperation="screen";for(let s=this.waveBursts.length-1;s>=0;s--){const i=this.waveBursts[s];if(i.progress+=e*(.35+1.4*this.motion.pulse+.6*this.depthDrift),i.alpha=Math.max(0,i.alpha-e*(.3+.5*this.energy.treble+.6*this.scene.dropFlash)),i.progress>=1||i.alpha<=.02){this.waveBursts.splice(s,1);continue}const r=this.minTunnelRadius*(.6+2.6*i.progress),a=Math.max(1,i.width*this.maxTunnelRadius*.05),h=(this.colorState.baseHue+i.hueShift)%360;t.lineWidth=a,t.strokeStyle=`hsla(${h}, 70%, ${42+24*this.scene.exposure}%, ${i.alpha*(.5+.5*this.scene.exposure)})`,t.beginPath(),t.arc(0,0,r,i.rotation-i.spread,i.rotation+i.spread),t.stroke()}t.restore()}}_renderCore(t){const e=this.constrain(this.core.slank||0,-.6,.6),s=this.constrain(this.core.proximity??.4,.2,1.6),i=this.constrain(.7+.95*s+.12*e,.45,1.95),r=this.minTunnelRadius*(.38+.26*this.scene.chromaBloom+.32*this.motion.pulse)*(.8+.55*i),a=this.minTunnelRadius*e*-.22,h=this.constrain(1+.18*e,.65,1.85),o=this.constrain(1-.16*e,.65,1.85);t.save(),t.translate(this.centerX,this.centerY+a),t.rotate(.9*this.motion.rotation+.12*e),t.scale(h,o);for(let a=0;a<3;a++){const h=.24*a,o=r*(1-h)*(1+.09*e*(1-h)),n=Math.max(3,Math.round(5+4*this.motion.pulse-a)),l=(this.colorState.accentHue+25*a)%360,c=.1-.03*a+.05*this.energy.brilliance+.2*this.scene.exposure,d=this.constrain(c*(.85+.2*i),.04,.4);t.beginPath();for(let s=0;s<=n;s++){const r=s/n*Math.PI*2,l=o*(Math.sin(r*(3+6*this.motion.twist)+.8*this.time+a)*(.08+.04*i)+Math.sin(1.5*r+1.6*this.time)*e*.12*(1-h)+1),c=Math.cos(r)*l,d=Math.sin(r)*l;0===s?t.moveTo(c,d):t.lineTo(c,d)}t.closePath(),t.fillStyle=`hsla(${l}, 72%, ${38+28*this.scene.exposure+4*a}%, ${d})`,t.fill(),t.lineWidth=Math.max(1,.05*o*(1+.2*s)),t.strokeStyle=`hsla(${(l+180)%360}, 60%, ${58+20*this.scene.exposure}%, ${.4*d})`,t.stroke()}t.restore();const n=r*(1.35+.35*i),l=this.centerX,c=this.centerY+a,d=t.createRadialGradient(l,c,0,l,c,Math.max(1,n)),p=(.06+.1*this.energy.brilliance)*(.7+this.scene.exposure)*(.85+.25*i);d.addColorStop(0,`hsla(${(this.colorState.accentHue+200)%360}, 82%, 68%, ${this.constrain(p,0,.9)})`),d.addColorStop(1,"rgba(255,255,255,0)"),t.save(),t.globalCompositeOperation="screen",t.globalAlpha=.3+.4*this.scene.chromaBloom,t.fillStyle=d,t.fillRect(l-n,c-n,2*n,2*n),t.restore()}_advanceSection(t=.6){this.scene.sectionSeed=this.scene.sectionSeed+1|0,this.scene.sectionTime=0,t>.7&&(this.scene.motif=(this.scene.motif+1)%2);const e=40*(Math.random()-.5)*t;this.colorState.targetBaseHue=(this.colorState.baseHue+e+360)%360,this.colorState.targetAccentHue=(this.colorState.accentHue+90+.6*e+360)%360;for(const t of this.tunnelBands)t.hueOffset+=.4*e;for(const t of this.rays)t.hueOffset+=.5*e}_lerpHue(t,e,s){return t+((e-t+540)%360-180)*s}}"undefined"!=typeof window&&(window.ChromaticWormholeVisualizer=ChromaticWormholeVisualizer);