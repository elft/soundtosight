class SoundWeaverVisualizer extends BaseVisualizer{init(){this.centerX=this.width/2,this.centerY=this.height/2,this.ringCount=6,this.baseNodesPerRing=10,this.nodeCountTarget=200,this.nodes=[],this.edges=[],this.motes=[],this.ripples=[],this.colorPulses=[],this.maxMotes=180,this.maxRipples=5,this.maxColorPulses=3,this.trailAlpha=.12,this._smoothed={subBass:0,bass:0,lowMid:0,mid:0,presence:0,brilliance:0,flux:0},this._smoothK=.08,this.stereoSkew=0,this._frameTime=0,this._frameCount=0,this._buildLattice(),this._lastAudioTime=performance.now(),this.baseHue=200}onResize(){this.centerX=this.width/2,this.centerY=this.height/2,this._repositionNodes()}_buildLattice(){this.nodes.length=0,this.edges.length=0,this._edgeSet=new Set;const t=.44*Math.min(this.width,this.height);for(let s=0;s<this.ringCount;s++){const e=Math.min(Math.round(this.baseNodesPerRing*(1+.7*s)),Math.ceil(this.nodeCountTarget/this.ringCount)),h=s/Math.max(1,this.ringCount-1)*t*(.28+.14*s);for(let t=0;t<e;t++){const i={ring:s,ringIndex:t,angle:t/e*Math.PI*2,baseRadius:h,radius:h,x:0,y:0,vx:0,vy:0,phase:Math.random()*Math.PI*2,hueOffset:40*Math.random()-20,brightness:.6,edgeStrength:0,id:this.nodes.length};this.nodes.push(i)}}for(let t=0;t<this.nodes.length;t++){const s=this.nodes[t],e=this.nodes.filter(t=>t.ring===s.ring),h=e.findIndex(t=>t===s);if(e.length>1){const t=e[(h+1)%e.length],i=e[(h-1+e.length)%e.length];this._addEdgeIfUnique(s.id,t.id),this._addEdgeIfUnique(s.id,i.id)}const i=this.nodes.filter(t=>1===Math.abs(t.ring-s.ring));if(i.length){i.sort((t,e)=>Math.abs(t.angle-s.angle)-Math.abs(e.angle-s.angle));const t=Math.min(2,i.length);for(let e=0;e<t;e++)this._addEdgeIfUnique(s.id,i[e].id)}}this._repositionNodes()}_repositionNodes(){const t=this.stereoSkew*(.08*this.width);for(const s of this.nodes){const e=Math.max(1e-4,s.baseRadius),h=Math.cos(s.angle)*e+this.centerX+t,i=Math.sin(s.angle)*e+this.centerY;s.x=h,s.y=i,s.radius=e}}_addEdgeIfUnique(t,s){if(t===s)return;const e=t<s?`${t}-${s}`:`${s}-${t}`;this._edgeSet.has(e)||(this._edgeSet.add(e),this.edges.push({a:t,b:s}))}onUpdate(t){if(!t)return;const s=t.time??performance.now()/1e3,e=Math.max(1e-4,s-(this._lastAudioTime||s));this._lastAudioTime=s,this._frameTime+=e,this._frameCount++;const{subBassEnergy:h,bassEnergy:i,lowMidEnergy:o,midEnergy:a,presenceEnergy:n,brillianceEnergy:r,spectralFlux:l,isBeat:d,isMassiveEnergyChange:p,rmsLeft:g,rmsRight:m,centroid:u}=t;if(this._smoothed.subBass=this._smooth(this._smoothed.subBass,h,this._smoothK),this._smoothed.bass=this._smooth(this._smoothed.bass,i,this._smoothK),this._smoothed.lowMid=this._smooth(this._smoothed.lowMid,o,this._smoothK),this._smoothed.mid=this._smooth(this._smoothed.mid,a,this._smoothK),this._smoothed.presence=this._smooth(this._smoothed.presence,n,this._smoothK),this._smoothed.brilliance=this._smooth(this._smoothed.brilliance,r,this._smoothK),this._smoothed.flux=this._smooth(this._smoothed.flux,l,this._smoothK),this.stereoSkew=this._clamp(1.6*(m-g),-1,1),this.baseHue=this._map(u,0,8e3,210,30),d&&this._spawnRipple(.8+1.5*(i+a)),p){const s=this._map(u,0,12e3,0,360);this._spawnColorPulse(s,2.5*t.energyChangeIntensity)}const c=Math.floor(25*(this._smoothed.presence+this._smoothed.brilliance)+30*this._smoothed.flux);for(let t=0;t<c;t++)this.motes.length<this.maxMotes&&Math.random()<.7&&this._spawnMote();const _=1+.6*(this._smoothed.subBass+this._smoothed.bass);for(const t of this.nodes){const s=1+t.ring/Math.max(1,this.ringCount-1)*.6,e=t.baseRadius*_*s,h=.6*Math.sin(this._frameTime*(.6+.1*t.phase)+t.phase)*(.5+1.5*(this._smoothed.lowMid+this._smoothed.mid))*(1+.2*t.ring);let i=0;for(let s of this.ripples)i+=this._rippleValueAtNode(s,t)*s.strength*1.6;let o=0,a=0;for(const s of this.colorPulses){const e=this._pulseValueAtNode(s,t);e>0&&(o=s.hue,a=e*s.strength)}t.pulseHue=o,t.pulseBrightness=a;const n=e+8*h+18*i,r=this.stereoSkew*(.08*this.width)*(t.ring/Math.max(1,this.ringCount-1)),l=Math.cos(t.angle)*n+this.centerX+r,d=Math.sin(t.angle)*n+this.centerY;t.vx+=.06*(l-t.x),t.vy+=.06*(d-t.y),t.vx*=.88,t.vy*=.88,t.x+=t.vx,t.y+=t.vy,t.brightness=this._clamp(.2+1.2*(this._smoothed.presence+this._smoothed.brilliance)+.18*Math.abs(Math.sin(t.phase+.6*this._frameTime)),0,1.3)}this._ageParticles(this.motes,t=>(t.age++,t.x+=t.vx,t.y+=t.vy,t.vx*=.98,t.vy*=.98,t.alpha*=.992,t.age>t.lifetime||t.alpha<.02)),this._ageParticles(this.ripples,t=>(t.age++,t.age>t.lifespan)),this._ageParticles(this.colorPulses,t=>(t.age++,t.age>t.lifespan));for(let t=0;t<this.edges.length;t++){const s=this.edges[t],e=this.nodes[s.a],h=this.nodes[s.b],i=.5*(e.brightness+h.brightness),o=this._rippleValueAtEdge(e,h);s.strength=this._clamp(i+2.2*o,0,1.6),s.pulseHue=e.pulseBrightness>0?e.pulseHue:h.pulseBrightness>0?h.pulseHue:0,s.pulseBrightness=Math.max(e.pulseBrightness,h.pulseBrightness)}}_spawnRipple(t=1){this.ripples.length>=this.maxRipples&&this.ripples.shift(),this.ripples.push({t0:this._frameTime,age:0,lifespan:80+Math.round(60*t),speed:.013+.01*t,strength:this._clamp(t,.1,3)})}_spawnColorPulse(t,s=1){this.colorPulses.length>=this.maxColorPulses&&this.colorPulses.shift(),this.colorPulses.push({hue:t,strength:this._clamp(s,.5,4),age:0,lifespan:90,speed:.025})}_rippleValueAtNode(t,s){const e=.6*Math.min(this.width,this.height),h=Math.sqrt(Math.pow(s.x-this.centerX,2)+Math.pow(s.y-this.centerY,2))/e,i=t.age*t.speed-h;return Math.exp(-Math.pow(8*i,2))*Math.cos(i*Math.PI*2)}_pulseValueAtNode(t,s){const e=.6*Math.min(this.width,this.height),h=Math.sqrt(Math.pow(s.x-this.centerX,2)+Math.pow(s.y-this.centerY,2))/e,i=t.age*t.speed-h;return i>0&&i<.1?Math.sin(i/.1*Math.PI):0}_rippleValueAtEdge(t,s){const e=.5*(t.x+s.x),h=.5*(t.y+s.y),i=.6*Math.min(this.width,this.height),o=Math.sqrt(Math.pow(e-this.centerX,2)+Math.pow(h-this.centerY,2));let a=0;for(const t of this.ripples){const s=o/i,e=t.age*t.speed-s;a+=Math.exp(-Math.pow(8*e,2))*t.strength}return a}_spawnMote(){const t=this.nodes.filter(t=>t.ring>=Math.floor(.5*this.ringCount)),s=t.length?t[Math.floor(Math.random()*t.length)]:this.nodes[Math.floor(Math.random()*this.nodes.length)],e=s.angle+.6*(Math.random()-.5),h=1+3*Math.random(),i=this.baseHue+(70*Math.random()-35);this.motes.push({x:s.x,y:s.y,vx:Math.cos(e)*h+(Math.random()-.5),vy:Math.sin(e)*h+(Math.random()-.5),age:0,lifetime:40+Math.floor(60*Math.random()),size:.8+3.2*Math.random(),alpha:.9+.6*Math.random(),hue:i})}_ageParticles(t,s){for(let e=t.length-1;e>=0;e--)s(t[e])&&t.splice(e,1)}onRender(){const t=this.ctx;t&&(t.save(),t.fillStyle=`rgba(0,0,0,${this.trailAlpha})`,t.globalCompositeOperation="source-over",t.fillRect(0,0,this.width,this.height),t.restore(),t.save(),t.globalCompositeOperation="lighter",this._drawEdges(t),this._drawMotes(t),this._drawNodes(t),this.config&&this.config.debug&&(t.save(),t.fillStyle="rgba(255,255,255,0.85)",t.font="12px monospace",t.fillText(`Nodes: ${this.nodes.length}  Edges: ${this.edges.length}  Motes: ${this.motes.length}  Ripples: ${this.ripples.length}  Pulses: ${this.colorPulses.length}`,12,18),t.restore()),t.restore())}_drawEdges(t){for(let s=0;s<this.edges.length;s++){const e=this.edges[s],h=this.nodes[e.a],i=this.nodes[e.b],o=this._clamp(e.strength??.3,.05,1.6),a=this._map(o,0,1.6,.4,3.4);let n=this.baseHue+.5*(h.hueOffset+i.hueOffset);const r=this._clamp(.18+.6*o,.03,1);e.pulseBrightness>0&&(this._clamp(e.pulseBrightness,0,1),n=e.pulseHue);const l=t.createLinearGradient(h.x,h.y,i.x,i.y);l.addColorStop(0,`hsla(${this._clamp(Math.round(n-12),0,360)}, 85%, 58%, ${.9*r})`),l.addColorStop(.5,`hsla(${this._clamp(Math.round(n+8),0,360)}, 82%, 66%, ${r})`),l.addColorStop(1,`hsla(${this._clamp(Math.round(n+28),0,360)}, 78%, 52%, ${.85*r})`),t.strokeStyle=l,t.lineWidth=a,t.lineCap="round",t.beginPath(),t.moveTo(h.x,h.y),t.lineTo(i.x,i.y),t.stroke()}}_drawNodes(t){for(const s of this.nodes){let e=this._clamp(Math.round(this.baseHue+s.hueOffset),0,360);const h=this._clamp(s.brightness,.05,1.6);s.pulseBrightness>0&&(this._clamp(s.pulseBrightness,0,1),e=s.pulseHue);const i=t.createRadialGradient(s.x,s.y,0,s.x,s.y,10+18*h);i.addColorStop(0,`hsla(${e}, 95%, ${50+8*h}%, ${.42*h})`),i.addColorStop(.3,`hsla(${e}, 88%, ${44+6*h}%, ${.22*h})`),i.addColorStop(1,`hsla(${e}, 82%, ${36+4*h}%, 0)`),t.fillStyle=i,t.beginPath(),t.arc(s.x,s.y,2.4+2.6*h,0,2*Math.PI),t.fill(),t.fillStyle=`hsla(${e}, 100%, ${66+6*h}%, 0.9)`,t.beginPath(),t.arc(s.x,s.y,Math.max(.6,.8+.6*h),0,2*Math.PI),t.fill()}}_drawMotes(t){for(const s of this.motes){const e=t.createRadialGradient(s.x,s.y,0,s.x,s.y,Math.max(6,6*s.size));e.addColorStop(0,`hsla(${Math.round(s.hue)}, 100%, 88%, ${this._clamp(s.alpha,0,1)})`),e.addColorStop(.4,`hsla(${Math.round(s.hue)}, 90%, 62%, ${this._clamp(.45*s.alpha,0,1)})`),e.addColorStop(1,`hsla(${Math.round(s.hue)}, 80%, 42%, 0)`),t.fillStyle=e,t.beginPath(),t.arc(s.x,s.y,Math.max(.6,2*s.size),0,2*Math.PI),t.fill()}}_map(t,s,e,h,i){return e===s?h:h+(t-s)*(i-h)/(e-s)}_clamp(t,s=0,e=1){return Math.max(s,Math.min(e,isFinite(t)?t:s))}_smooth(t,s,e){return t+(s-t)*e}destroy(){this.nodes=[],this.edges=[],this.motes=[],this.ripples=[],this.colorPulses=[],super.destroy&&super.destroy()}}"undefined"!=typeof window&&(window.SoundWeaverVisualizer=SoundWeaverVisualizer);