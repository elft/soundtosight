class EDMShowVisualizer extends BaseVisualizer{static meta={description:"Festival lasers, morphing blobs, and crowd-shaking bursts tuned for mainstage drops.",tags:["edm","festival","heavy bass","high energy"]};constructor(t=null,s={}){super(t,{backgroundColor:"#000",force2d:!0,...s}),this.prevT=.001*performance.now(),this.loud=0,this.phase=0,this.lobes=6,this.lobesTarget=6,this.morphAmt=.28,this.morphAmtTarget=.28,this.lastSec=-1,this.secStats=new Map,this.MORPH_EPS=.02,this.LOBES_MIN=4,this.LOBES_MAX=12,this.beatPulse=0,this.highEnergy=0,this.fluxSmooth=0,this.laserBlink=0,this.laserPhase=0,this.laserHueShift=0,this.morphSwapCooldown=0,this.lasers=[],this.shapeType="blob",this.shapeTimer=0,this.shapePhase=0,this.colorHue=140,this.colorCooldown=0}onUpdate(t){const s=.001*performance.now(),h=this.clamp(s-this.prevT,1/240,.1);this.prevT=s;const e=Number.isFinite(t?.loudnessShortDb)?t.loudnessShortDb:t?.aWeighted?.mono?.db??-60,i=this.dbTo01(e);this.loud=this.attackRelease(this.loud,i,h,.05,.45);const a=this.audioTriggers||{},o=a.dropStart||a.dropBloom,r=Number.isFinite(t?.brillianceEnergy)?t.brillianceEnergy:Number.isFinite(t?.trebleEnergy)?t.trebleEnergy:0,n=Number.isFinite(t?.spectralFlux)?t.spectralFlux:0,l=t?.isBeat||o||t?.snareHit||t?.hatTick?1:0;this.highEnergy=this.attackRelease(this.highEnergy,r,h,.12,.42),this.fluxSmooth=this.attackRelease(this.fluxSmooth,n,h,.18,.55),this.beatPulse=this.attackRelease(this.beatPulse,l,h,.05,.38);const c=this.clamp(.7*this.loud+.6*this.highEnergy+.4*this.fluxSmooth,0,1);if(this.laserBlink=this.attackRelease(this.laserBlink,c,h,.08,.45),this.laserPhase+=h*(1.5+3*this.highEnergy+1.6*this.loud),this.laserHueShift=(this.laserHueShift+h*(35+180*this.highEnergy))%360,this.colorCooldown=Math.max(0,this.colorCooldown-h),l&&this.colorCooldown<=0){const t=60+160*Math.random();this.colorHue=(this.colorHue+t)%360,this.colorCooldown=.3}const g=Number(t?.time)||0,m=Math.floor(g);this.secStats.has(m)||this.secStats.set(m,{sum:0,n:0});const u=this.secStats.get(m);if(u.sum+=this.loud,u.n++,m!==this.lastSec&&this.lastSec>=1){const t=this.secStats.get(this.lastSec-1),s=this.secStats.get(this.lastSec);if(t?.n&&s?.n){const h=t.sum/t.n;s.sum/s.n>h+this.MORPH_EPS?(this.lobesTarget=this.lobesTarget+1,this.lobesTarget>this.LOBES_MAX&&(this.lobesTarget=this.LOBES_MIN),this.morphAmtTarget=Math.min(.45,this.morphAmtTarget+.04)):this.morphAmtTarget=Math.max(.22,this.morphAmtTarget-.02)}for(const t of Array.from(this.secStats.keys()))t<m-2&&this.secStats.delete(t)}if(this.lastSec=m,this.morphSwapCooldown=Math.max(0,this.morphSwapCooldown-h),l&&(this.highEnergy>.35||this.fluxSmooth>.28)&&this.morphSwapCooldown<=0){const t=Math.floor(this.clamp(2+6*this.highEnergy,2,6)),s=Math.floor(Math.random()*t*2-t);this.lobesTarget=this.clamp(this.lobesTarget+s,this.LOBES_MIN,this.LOBES_MAX);const h=this.clamp(.18+.32*Math.random()+.25*this.highEnergy,.18,.5);this.morphAmtTarget=h,this.morphSwapCooldown=.4}this.lobes=this.attackRelease(this.lobes,this.lobesTarget,h,.12,.8),this.morphAmt=this.attackRelease(this.morphAmt,this.morphAmtTarget,h,.2,1.2);const d=.6+1.4*this.loud;this.phase+=d*h;const p=4+Math.min(6,Math.floor(6*this.loud+4*this.highEnergy+4*this.fluxSmooth));this._ensureLasers(p),this.lasers.length>p&&(this.lasers.length=p),(1===l||this.fluxSmooth>.35)&&this._retargetLasers(),this._updateLasers(h),this.shapeTimer=Math.max(0,this.shapeTimer-h),(l&&this.shapeTimer<=0||this.fluxSmooth>.45&&this.shapeTimer<=.1)&&this._selectNextShape(),this.shapePhase+=h*(.4+1.5*this.highEnergy+.8*this.loud)}onRender(){const t=this.ctx,s=this.width,h=this.height,e="undefined"!=typeof window&&window.matchMedia&&window.matchMedia("(max-width: 768px)").matches,i=.5*s,a=e?.48*h:.5*h;t.fillStyle=this.config.backgroundColor,t.fillRect(0,0,s,h);const o=t.createRadialGradient(i,a,0,i,a,Math.hypot(i,a));o.addColorStop(0,"rgba(0,0,0,0.08)"),o.addColorStop(1,"rgba(0,0,0,0.90)"),t.fillStyle=o,t.fillRect(0,0,s,h),Math.min(s,h),this.loud;for(let t=0;t<this.lasers.length;t++){const e=this.lasers[t],i=e.anchor.nx*s,a=e.anchor.ny*h;this._drawFullLaser(i,a,e.currentX,e.currentY,this.colorHue+e.hueOffset,e.intensity)}const r=e?.24:.18,n=Math.min(s,h)*(r+.12*this.loud+.08*this.highEnergy);this._drawCenterShape(i,a,n)}_drawFullLaser(t,s,h,e,i){const a=this.ctx,o=this.width,r=this.height,n=h-t,l=e-s,c=Math.hypot(n,l)||1,g=n/c,m=l/c,u=1.2*Math.hypot(o,r),d=t+g*u,p=s+m*u;a.beginPath(),a.moveTo(t,s),a.lineTo(d,p);const M=this.clamp(this.loud+.8*this.beatPulse+.6*this.highEnergy,0,1.6);a.lineWidth=1.5+6*M,a.strokeStyle=`hsl(${i%360} 100% ${Math.min(85,50+35*M)}%)`,a.shadowColor=`hsl(${(i+40)%360} 100% 60%)`,a.shadowBlur=10+40*M;const y=a.globalCompositeOperation;a.globalCompositeOperation="lighter",a.stroke(),a.globalCompositeOperation=y}_drawCenterShape(t,s,h){const e=this.ctx,i=(this.colorHue+.3*this.laserHueShift)%360,a=(i+60)%360,o=(i+100)%360,r=(i+120)%360,n=2+5*this.loud,l=10+28*this.loud+18*this.highEnergy;switch(e.save(),e.translate(t,s),e.lineWidth=n,e.strokeStyle=`hsl(${a} 100% ${Math.min(90,55+32*this.loud+25*this.highEnergy)}%)`,e.shadowColor=`hsl(${o} 100% 64%)`,e.shadowBlur=l,e.beginPath(),this.shapeType){case"circle":{const t=1+.2*this.highEnergy+.25*this.beatPulse;e.arc(0,0,h*t,0,2*Math.PI);break}case"triangle":{const t=3,s=.6*this.phase;for(let i=0;i<=t;i++){const a=s+i/t*Math.PI*2,o=h*(.9+.3*this.loud+.08*Math.sin(3*a+this.shapePhase)),r=Math.cos(a)*o,n=Math.sin(a)*o;0===i?e.moveTo(r,n):e.lineTo(r,n)}break}case"square":{const t=4,s=.45*this.phase;for(let i=0;i<=t;i++){const a=s+i/t*Math.PI*2,o=h*(.95+.25*this.loud+.06*Math.cos(4*a+.7*this.shapePhase)),r=Math.cos(a)*o,n=Math.sin(a)*o;0===i?e.moveTo(r,n):e.lineTo(r,n)}break}case"star":{const t=5+Math.round(3*this.highEnergy),s=h*(.45+.25*this.loud),i=h*(1.05+.3*this.highEnergy),a=.5*this.phase;for(let h=0;h<=2*t;h++){const o=a+h/(2*t)*Math.PI*2,r=h%2==0?i:s,n=Math.cos(o)*r,l=Math.sin(o)*r;0===h?e.moveTo(n,l):e.lineTo(n,l)}break}case"abstract":{const t=3+Math.round(4*this.highEnergy),s=260;for(let i=0;i<=s;i++){const a=i/s*Math.PI*2,o=h*(.7+.4*Math.sin(t*a+this.shapePhase)+.2*Math.sin(2*a)),r=Math.cos(a)*o,n=Math.sin(a)*o;0===i?e.moveTo(r,n):e.lineTo(r,n)}break}default:{const t=220,s=this.lobes,i=this.morphAmt,a=.3*this.phase;for(let o=0;o<=t;o++){const r=a+o/t*Math.PI*2,n=h*(1+i*Math.cos(s*r)),l=Math.cos(r)*n,c=Math.sin(r)*n;0===o?e.moveTo(l,c):e.lineTo(l,c)}}}e.closePath(),e.stroke(),this.beatPulse>.25&&(e.globalAlpha=.6*this.beatPulse,e.fillStyle=`hsl(${r} 100% ${Math.min(88,52+40*this.highEnergy)}%)`,e.fill()),e.restore()}_ensureLasers(t){for(;this.lasers.length<t;){const t=this.lasers.length,s=this._createAnchor(t<4,this.loud,t),h=80*Math.random()-40;this.lasers.push({anchor:s,angle:Math.random()*Math.PI*2,radiusScale:.6+.6*Math.random(),currentX:.5*this.width,currentY:.5*this.height,targetX:.5*this.width,targetY:.5*this.height,hueOffset:h,intensity:0})}}_createAnchor(t,s,h){const e=[{nx:0,ny:0},{nx:1,ny:0},{nx:1,ny:1},{nx:0,ny:1}],i=this.clamp(.35*s+.25*this.highEnergy,0,.5);if(t){const t=e[h%e.length];return{nx:t.nx,ny:t.ny}}const a=Math.floor(4*Math.random()),o=this.clamp(Math.random()*(.4+i)+(1-(.4+i))*Math.random(),0,1);switch(a){case 0:return{nx:o,ny:0};case 1:return{nx:1,ny:o};case 2:return{nx:o,ny:1};default:return{nx:0,ny:o}}}_retargetLasers(){for(const t of this.lasers)t.angle=Math.random()*Math.PI*2,t.radiusScale=.55+.75*Math.random()}_updateLasers(t){const s=.5*this.width,h=.5*this.height,e=Math.min(this.width,this.height)*(.18+.32*this.loud+.2*this.highEnergy),i=this.clamp(.8+1.4*this.loud+1.2*this.beatPulse,.6,3),a=.12+.88*this.clamp(.7*this.loud+.6*this.highEnergy+.5*this.fluxSmooth,0,1);for(const o of this.lasers){const r=o.anchor.nx*this.width,n=o.anchor.ny*this.height,l=e*o.radiusScale,c=s+Math.cos(o.angle)*l,g=h+Math.sin(o.angle)*l;o.targetX=r+(c-r)*a,o.targetY=n+(g-n)*a,o.currentX+=(o.targetX-o.currentX)*this.clamp(i*t*6,0,1),o.currentY+=(o.targetY-o.currentY)*this.clamp(i*t*6,0,1);const m=this.clamp(this.loud+.8*this.highEnergy+.6*this.beatPulse,0,1.6);o.intensity=this.attackRelease(o.intensity,m,t,.1,.6)}}_selectNextShape(){const t=["blob","circle","triangle","square","star","abstract"];let s=this.shapeType;for(let h=0;h<5;h++){const h=t[Math.floor(Math.random()*t.length)];if(h!==this.shapeType){s=h;break}}this.shapeType=s;const h=.5+.6*(1-this.loud);this.shapeTimer=h}}window.EDMShowVisualizer=EDMShowVisualizer;