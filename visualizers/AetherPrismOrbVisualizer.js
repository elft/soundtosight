class AetherPrismOrbVisualizer extends BaseVisualizer{constructor(t,e={}){super(t,{backgroundColor:"#050505",force2d:!0,smoothing:.25,stereoMode:!0,sensitivity:1,debug:!1,...e}),this.t=0,this.maxParticles=420,this.particles=new Array(this.maxParticles).fill(0).map((t,e)=>({phi:Math.acos(2*Math.random()-1),theta:Math.random()*Math.PI*2,x:0,y:0,z:0})),this.baseRadius=.22*Math.min(this.width,this.height),this.currentRadius=this.baseRadius,this.freqL=[],this.freqR=[],this.waveL=[],this.waveR=[],this.stereo=0,this.gravity=0,this.constellationStrength=0,this.filamentThreshold=.14,this.spineRings=[{tiltX:.3,tiltY:.1,radiusScale:.65},{tiltX:-.4,tiltY:.25,radiusScale:.85},{tiltX:.9,tiltY:-.2,radiusScale:1.05}],this.filamentFlash=0}onResize(){this.baseRadius=.22*Math.min(this.width,this.height)}onUpdate(t){this.t+=.004+.02*t.energy,this.freqL=t.frequencyLeft,this.freqR=t.frequencyRight,this.waveL=t.timeDomainLeft,this.waveR=t.timeDomainRight,this.stereo=t.stereoBalance,t.bassDrop&&(this.gravity=1),this.gravity*=.92,this.gravity=Math.max(0,this.gravity),this.constellationStrength+=8e-4*t.brillianceEnergy,this.constellationStrength*=.96;const e=[{key:"subBassEnergy",hue:250},{key:"bassEnergy",hue:210},{key:"lowMidEnergy",hue:180},{key:"midEnergy",hue:130},{key:"upperMidEnergy",hue:80},{key:"presenceEnergy",hue:45},{key:"trebleEnergy",hue:18},{key:"brillianceEnergy",hue:300}].reduce((e,i)=>t[i.key]>t[e.key]?i:e);this.hue=e.hue,this.currentRadius+=.08*(this.baseRadius+t.energy*this.baseRadius*.6-this.currentRadius),this.spineRotation=(this.spineRotation??0)+.004*t.midEnergy+.002*t.presenceEnergy,(t.isBeat||t.isBeatSpike||t.bassDrop||t.spectralFlux>.04)&&(this.filamentFlash=1),this.filamentFlash*=.88}onRender(){const t=this.ctx,e=.5*this.width,i=.5*this.height;t.fillStyle="rgba(0,0,0,0.18)",t.fillRect(0,0,this.width,this.height);const s=.7*this.t,h=.4*this.t,a=Math.sin(s),r=Math.cos(s),n=Math.sin(h),l=Math.cos(h);t.lineWidth=1.6;for(let s of this.spineRings){const h=this.currentRadius*s.radiusScale*(1-.35*this.gravity);let o=this.spineRotation+s.tiltX,c=.7*this.spineRotation+s.tiltY;const u=Math.sin(o),g=Math.cos(o),p=Math.sin(c),y=Math.cos(c),d=72;t.beginPath();for(let s=0;s<=d;s++){const o=s/d*Math.PI*2;let c=h*Math.cos(o),f=h*Math.sin(o),M=0,R=c*y-M*p,m=c*p+M*y,b=f*g-m*u;m=f*u+m*g;let v=R*n+m*l,w=b*r-v*a;v=b*a+v*r;const k=1/(1+.0025*v),x=e+(R*l-m*n)*k,S=i+w*k;0===s?t.moveTo(x,S):t.lineTo(x,S)}t.strokeStyle=`hsla(${this.hue}, 90%, 65%, 0.38)`,t.stroke()}const o=this.particles.length,c=[];for(let t=0;t<o;t++){const s=this.particles[t],h=this.currentRadius*(1-.45*this.gravity);let o=h*Math.sin(s.phi)*Math.cos(s.theta),u=h*Math.sin(s.phi)*Math.sin(s.theta),g=h*Math.cos(s.phi),p=(this.waveL[t%this.waveL.length]+this.waveR[t%this.waveR.length])/510,y=(this.freqL[t%this.freqL.length]+this.freqR[t%this.freqR.length])/510;const d=1+.45*y+.3*p;o*=d,u*=d,g*=d;let f=o*n+g*l,M=u*r-f*a;f=u*a+f*r;const R=1/(1+.0025*f),m=e+(o*l-g*n)*R,b=i+M*R,v=50+50*y+40*p,w=Math.max(1.2,3.4*R+3*y);c.push({px:m,py:b,hue:this.hue,brightness:v,size:w,perspective:R})}if(c.sort((t,e)=>t.perspective-e.perspective),this.filamentFlash>.01){t.lineWidth=1.4;const e=125,i=Math.floor(.18*o*this.filamentFlash);t.globalAlpha=this.filamentFlash;for(let s=0;s<i;s++){const i=c[7*s%o],h=c[(11*s+Math.floor(9*this.t))%o];t.strokeStyle=`hsla(${e}, 100%, 62%, 0.55)`,t.beginPath(),t.moveTo(i.px,i.py),t.lineTo(h.px,h.py),t.stroke()}t.globalAlpha=1}t.globalAlpha=1;for(let e of c)t.fillStyle=`hsla(${e.hue}, 90%, ${e.brightness}%, ${.7*e.perspective})`,t.beginPath(),t.arc(e.px,e.py,e.size,0,2*Math.PI),t.fill()}}"undefined"!=typeof window&&(window.AetherPrismOrbVisualizer=AetherPrismOrbVisualizer);