class ImageVisualizer extends BaseVisualizer{constructor(t,i={}){super(t,{...i}),this.originalImage=null,this.imageData=null,this.originalImageData=null,this.imageLoaded=!1,this.imageAspectRatio=1,this.drawWidth=0,this.drawHeight=0,this.drawX=0,this.drawY=0,this.fileInput=null,this.setupImageUpload()}init(){}setupImageUpload(){try{this.fileInput=document.createElement("input"),this.fileInput.type="file",this.fileInput.accept="image/*",this.fileInput.style.display="none",this.fileInput.id="imageUploadInput_"+Math.random().toString(36).substring(7),document.body.appendChild(this.fileInput),this.fileInput.addEventListener("change",t=>{const i=t.target,e=i.files?.[0];e&&this.loadImage(e).catch(t=>{})}),this.canvas.addEventListener("click",t=>{this.imageLoaded||this.fileInput?.click()})}catch(t){}}openImageSelector(){this.fileInput||this.setupImageUpload(),this.fileInput&&this.fileInput.click()}async loadImage(t){try{const i=new Image,e=URL.createObjectURL(t);return new Promise((t,a)=>{i.onload=()=>{this.originalImage=i,this.imageAspectRatio=i.width/i.height,this.calculateImageDimensions(),this.extractImageData(),this.imageLoaded=!0,URL.revokeObjectURL(e),t()},i.onerror=()=>{URL.revokeObjectURL(e),a(new Error("Failed to load image"))},setTimeout(()=>{i.complete||(URL.revokeObjectURL(e),a(new Error("Image load timeout")))},1e4),i.src=e})}catch(t){throw t}}calculateImageDimensions(){if(!this.originalImage)return;const t=this.width/this.height;this.imageAspectRatio>t?(this.drawWidth=this.width,this.drawHeight=this.width/this.imageAspectRatio):(this.drawHeight=this.height,this.drawWidth=this.height*this.imageAspectRatio),this.drawX=(this.width-this.drawWidth)/2,this.drawY=(this.height-this.drawHeight)/2}extractImageData(){this.originalImage&&(this.ctx.drawImage(this.originalImage,this.drawX,this.drawY,this.drawWidth,this.drawHeight),this.originalImageData=this.ctx.getImageData(0,0,this.width,this.height),this.imageData=this.ctx.createImageData(this.width,this.height),this.imageData.data.set(this.originalImageData.data))}onResize(){this.imageLoaded&&(this.calculateImageDimensions(),this.extractImageData())}onUpdate(t){if(!this.imageLoaded||!this.imageData)return;t.rms,t.energy;const i=t.bassEnergy??0,e=this.imageData.data,a=this.originalImageData.data;for(let s=0;s<e.length;s+=4){const h=a[s],n=a[s+1],r=a[s+2],g=a[s+3],d=1+.5*i,o=1+.5*(t.midEnergy??0),l=1+.5*(t.trebleEnergy??0);e[s]=Math.min(255,h*d),e[s+1]=Math.min(255,n*o),e[s+2]=Math.min(255,r*l),e[s+3]=g}}onRender(){this.imageLoaded&&this.ctx.putImageData(this.imageData,0,0)}destroy(){this.fileInput&&this.fileInput.parentNode&&this.fileInput.parentNode.removeChild(this.fileInput),super.destroy()}}"undefined"!=typeof window&&(window.ImageVisualizer=ImageVisualizer);