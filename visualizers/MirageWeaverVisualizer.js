class MirageWeaverVisualizer extends BaseVisualizer{constructor(t,s){super(t,{backgroundColor:"#000000",force2d:!0,...s})}init(){this.distortionIntensity=0,this.warpAmplitude=0,this.distortionPhase=0,this.oscillationSpeed=0,this.hazePulse=0,this.smoothedStereo=0,this.tintHue=0,this.tintSaturation=0,this.glitchParticles=[],this.maxGlitches=50,this.glassShards=[],this.glassOpacity=0,this.explosionWaves=[],this.lastExplosion=0,this.sourceCanvas=document.createElement("canvas"),this.sourceCtx=this.sourceCanvas.getContext("2d"),this.glassOverlay=this.createOverlay("glass",10),this.gridResolution=32,this.distortionGrid=this.createDistortionGrid(),this.generateBackgroundGradient(),this.smoothedRms=0,this.smoothedBass=0,this.smoothedFlux=0,this.smoothedCentroid=0,this.smoothedFlatness=0,this.smoothedLowMid=0,this.smoothedMid=0,this.smoothedUpperMid=0,this.smoothedPresence=0,this.smoothedTreble=0,this.smoothedBrilliance=0,this.bgPalette={baseHue:220,accentHue:200,shadowHue:260,duskHue:40,zenithHue:320,lightness:14,parallax:0},this.horizonBands=Array.from({length:6},(t,s)=>({depth:s,offset:Math.random(),speed:0,amplitude:12,hueShift:0,brightness:20,waveSeed:Math.random()*Math.PI*2})),this.veilLayers=Array.from({length:3},(t,s)=>({angle:Math.random()*Math.PI*2,offset:5*Math.random(),stretch:.7+.25*s,opacity:.18,hueShift:26*s,turbulence:.4})),this.thermalColumns=[],this.maxThermalColumns=18,this.columnTimer=0}createDistortionGrid(){const t=[],s=this.gridResolution,i=Math.ceil(s*(this.height/this.width));for(let e=0;e<i;e++)for(let h=0;h<s;h++)t.push({x:h/(s-1)*this.width,y:e/(i-1)*this.height,offsetX:0,offsetY:0,phase:Math.random()*Math.PI*2});return this.gridCols=s,this.gridRows=i,t}generateBackgroundGradient(){this.bgGradientStops=[{pos:0,hueShift:-30,sat:55,lightness:10},{pos:.25,hueShift:-12,sat:60,lightness:12},{pos:.55,hueShift:0,sat:58,lightness:9},{pos:.82,hueShift:24,sat:52,lightness:8},{pos:1,hueShift:48,sat:45,lightness:6}]}onUpdate(t){const s=.15;this.smoothedRms=this.lerp(this.smoothedRms,t.rms||0,s),this.smoothedBass=this.lerp(this.smoothedBass,t.bassEnergy||0,s),this.smoothedFlux=this.lerp(this.smoothedFlux,t.spectralFlux||0,s),this.smoothedCentroid=this.lerp(this.smoothedCentroid,t.centroid||0,s),this.smoothedFlatness=this.lerp(this.smoothedFlatness,t.flatness||0,s),this.smoothedLowMid=this.lerp(this.smoothedLowMid,t.lowMidEnergy||0,s),this.smoothedMid=this.lerp(this.smoothedMid,t.midEnergy||0,s),this.smoothedUpperMid=this.lerp(this.smoothedUpperMid,t.upperMidEnergy||0,s),this.smoothedPresence=this.lerp(this.smoothedPresence,t.presenceEnergy||0,s),this.smoothedTreble=this.lerp(this.smoothedTreble,t.trebleEnergy||0,s),this.smoothedBrilliance=this.lerp(this.smoothedBrilliance,t.brillianceEnergy||0,s),this.smoothedStereo=this.lerp(this.smoothedStereo,t.stereoBalance||0,.12),this.hazePulse=this.lerp(this.hazePulse,t.energy||0,.08),this.distortionIntensity=this.map(this.smoothedRms,0,.4,0,1),this.warpAmplitude=this.map(this.smoothedBass,0,1,10,120),this.smoothedFlux>.15&&this.glitchParticles.length<this.maxGlitches&&this.spawnGlitchArtifact(t);const i=this.map(Math.log(this.smoothedCentroid+1),Math.log(1),Math.log(2e4),0,1);this.tintHue=this.map(i,0,1,0,240),this.tintSaturation=this.map(this.smoothedRms,0,.5,20,70);const e=t.beatPhase||0;this.oscillationSpeed=this.map(e,0,1,.02,.08),this.distortionPhase+=this.oscillationSpeed,this.glassOpacity=this.map(this.smoothedFlatness,.3,1,0,.45),this.smoothedFlatness>.5&&this.glassShards.length<30&&this.generateGlassShards(),t.isMassiveEnergyChange&&t.time-this.lastExplosion>1&&(this.triggerExplosion(t),this.lastExplosion=t.time),this.updateHorizonBands(t),this.updateVeilLayers(t),this.updateDistortionGrid(t),this.updateGlitchParticles(),this.updateExplosionWaves(),this.updateGlassShards(),this.updateThermalColumns(t)}updateDistortionGrid(t){this.smoothedBass;const s=this.distortionPhase;for(let i=0;i<this.distortionGrid.length;i++){const e=this.distortionGrid[i],h=e.x/this.width,a=e.y/this.height,o=Math.sin(h*Math.PI*3+s)*this.warpAmplitude,r=Math.cos(a*Math.PI*2+.7*s)*this.warpAmplitude*.6,l=Math.sin((h+a)*Math.PI*4+1.3*s)*this.warpAmplitude*.3,n=h-.5,d=a-.5,m=Math.sqrt(n*n+d*d),c=Math.sin(m*Math.PI*8+2*s)*this.warpAmplitude*.5;e.offsetX=(o+l+c*n)*this.distortionIntensity,e.offsetY=(r+l+c*d)*this.distortionIntensity;const p=20*(t.stereoBalance||0);e.offsetX+=p}}spawnGlitchArtifact(t){const s=Math.floor(3*Math.random())+1;for(let t=0;t<s;t++)this.glitchParticles.push({x:Math.random()*this.width,y:Math.random()*this.height,width:100*Math.random()+50,height:20*Math.random()+5,offsetX:30*(Math.random()-.5),offsetY:30*(Math.random()-.5),alpha:.6*Math.random()+.3,life:1,color:`hsl(${this.tintHue+60*Math.random()-30}, 80%, 60%)`})}updateGlitchParticles(){for(let t=this.glitchParticles.length-1;t>=0;t--){const s=this.glitchParticles[t];s.life-=.02,s.alpha=.8*s.life,s.y+=.1*s.offsetY,s.x+=.1*s.offsetX,s.life<=0&&this.glitchParticles.splice(t,1)}}generateGlassShards(){const t=Math.floor(5*Math.random())+3;for(let s=0;s<t;s++){const t=Math.random()*this.width,s=Math.random()*this.height,i=Math.floor(3*Math.random())+4,e=[],h=80*Math.random()+40;for(let a=0;a<i;a++){const o=a/i*Math.PI*2,r=h*(.7+.6*Math.random());e.push({x:t+Math.cos(o)*r,y:s+Math.sin(o)*r})}this.glassShards.push({vertices:e,rotation:Math.random()*Math.PI*2,rotationSpeed:.02*(Math.random()-.5),alpha:.3*Math.random()+.1,life:1,drift:{x:.5*(Math.random()-.5),y:.5*(Math.random()-.5)}})}}updateGlassShards(){for(let t=this.glassShards.length-1;t>=0;t--){const s=this.glassShards[t];s.rotation+=s.rotationSpeed;for(const t of s.vertices)t.x+=s.drift.x,t.y+=s.drift.y;s.life-=.005,s.alpha=.3*s.life,s.life<=0&&this.glassShards.splice(t,1)}}updateHorizonBands(t){if(!this.horizonBands||0===this.horizonBands.length)return;const s=t=>Number.isFinite(t)?t:0,i=s(t.bassEnergy??t.BassEnergy),e=s(t.subBassEnergy??0),h=s(t.lowMidEnergy),a=s(t.midEnergy),o=s(t.upperMidEnergy),r=s(t.presenceEnergy),l=s(t.trebleEnergy),n=s(t.brillianceEnergy),d=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210;this.bgPalette.baseHue=this.lerp(this.bgPalette.baseHue,(d+320)%360,.06),this.bgPalette.accentHue=this.lerp(this.bgPalette.accentHue,(d+90*r-20)%360,.08),this.bgPalette.shadowHue=this.lerp(this.bgPalette.shadowHue,(d+200+60*this.smoothedStereo)%360,.07),this.bgPalette.zenithHue=this.lerp(this.bgPalette.zenithHue,(d+220*n+60)%360,.08),this.bgPalette.duskHue=this.lerp(this.bgPalette.duskHue,(d+40+160*l)%360,.08),this.bgPalette.lightness=this.lerp(this.bgPalette.lightness,10+40*this.distortionIntensity+60*this.hazePulse,.08);const m=this.lerp(i,e,.5);this.bgPalette.parallax=this.lerp(this.bgPalette.parallax,.2+.8*m+.3*this.smoothedStereo,.1);const c=this.horizonBands.length>1?this.horizonBands.length-1:1;this.horizonBands.forEach((t,s)=>{const i=s/c,e=this.lerp(this.lerp(m,h,i),this.lerp(a,o,i),.5),d=this.lerp(r,l,i);t.speed=this.lerp(t.speed,.004+.05*e+this.distortionIntensity*(.01+.02*i),.12),t.offset=(t.offset+t.speed)%1;const p=18+160*e,u=this.smoothedFlux*(90+110*(1-i));t.amplitude=this.lerp(t.amplitude,p+u,.14);const g=180*d+220*n*(1-i)+80*this.smoothedStereo;t.hueShift=this.lerp(t.hueShift,g,.1),t.brightness=this.lerp(t.brightness,20+80*e+40*this.hazePulse*(1-i),.1)})}updateVeilLayers(t){if(!this.veilLayers||0===this.veilLayers.length)return;const s=t=>Number.isFinite(t)?t:0,i=s(t.upperMidEnergy),e=s(t.presenceEnergy),h=s(t.brillianceEnergy);this.veilLayers.forEach((t,s)=>{const a=0===s?i:1===s?e:h;t.offset+=.01+.06*a+.04*this.distortionIntensity,t.angle+=.03*this.smoothedStereo+.004*(s-1),t.opacity=this.lerp(t.opacity,.12+.65*a+.35*this.smoothedFlux,.12),t.turbulence=this.lerp(t.turbulence,.4+1.8*a+.6*this.distortionIntensity,.1),t.stretch=this.lerp(t.stretch,.6+.8*a+.4*this.hazePulse,.1)})}spawnThermalColumn(t){const s=Math.min(1,Math.max(0,t)),i=18+120*s;this.thermalColumns.push({x:Math.random()*this.width,width:i,height:this.height*(.15+.25*Math.random()),riseSpeed:2+14*s,phase:Math.random()*Math.PI*2,drift:(1.2*Math.random()+.2)*(Math.random()>.5?1:-1),life:1,alpha:.5,hue:(this.tintHue+40+60*Math.random())%360,energy:s})}updateThermalColumns(t){if(!this.thermalColumns)return;const s=t=>Number.isFinite(t)?t:0,i=.6*s(t.presenceEnergy)+.3*s(t.trebleEnergy)+.4*s(t.brillianceEnergy);this.columnTimer+=.01+.6*this.oscillationSpeed,i>.32&&this.columnTimer>.18&&this.thermalColumns.length<this.maxThermalColumns&&(this.spawnThermalColumn(i),this.columnTimer=0);for(let t=this.thermalColumns.length-1;t>=0;t--){const s=this.thermalColumns[t];s.phase+=.05+.2*i+.08*this.smoothedStereo,s.height+=s.riseSpeed,s.riseSpeed*=1.01+.02*this.distortionIntensity,s.x+=Math.sin(s.phase)*s.drift,s.width+=.6*Math.sin(.6*s.phase),s.life-=.008+.006*i+.01*this.smoothedFlux,s.alpha=Math.max(0,s.life*(.55+.3*s.energy)),s.x<-s.width&&(s.x=this.width+s.width),s.x>this.width+s.width&&(s.x=-s.width),(s.alpha<=0||s.height>1.6*this.height)&&this.thermalColumns.splice(t,1)}}triggerExplosion(t){const s=this.width/2,i=this.height/2;for(let t=0;t<1;t++)this.explosionWaves.push({x:s,y:i,radius:30*t,maxRadius:1.5*Math.max(this.width,this.height),speed:8+2*t,thickness:40-6*t,alpha:.8-.1*t,life:1,color:"red"})}updateExplosionWaves(){for(let t=this.explosionWaves.length-1;t>=0;t--){const s=this.explosionWaves[t];s.radius+=s.speed,s.speed*=1.02,s.life=1-s.radius/s.maxRadius,s.alpha=.8*s.life,s.radius>=s.maxRadius&&this.explosionWaves.splice(t,1)}}onRender(){const t=this.ctx,s=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210,i=Math.max(0,Math.min(100,Number.isFinite(this.tintSaturation)?this.tintSaturation:45)),e=this.createDynamicBackgroundGradient(s);t.fillStyle=e,t.fillRect(0,0,this.width,this.height),t.globalAlpha=this.map(this.distortionIntensity,0,1,.12,.32)+.18*this.hazePulse,t.fillStyle=`hsl(${s}, ${i}%, 30%)`,t.fillRect(0,0,this.width,this.height),t.globalAlpha=1,this.sourceCanvas.width=this.canvas.width,this.sourceCanvas.height=this.canvas.height,this.sourceCtx.drawImage(this.canvas,0,0),t.fillStyle="#000000",t.fillRect(0,0,this.width,this.height),this.drawDistortedImage(),this.drawHorizonBands(),this.drawRefractionVeils(),this.drawEnergyStreams(),this.drawThermalColumns(),this.drawGlitchParticles(),this.drawExplosionWaves(),this.drawGlassShards(),this.drawScanlines()}drawDistortedImage(){const t=this.ctx,s=this.gridCols,i=this.gridRows;for(let e=0;e<i-1;e++)for(let i=0;i<s-1;i++){const h=e*s+i,a=e*s+(i+1),o=(e+1)*s+(i+1),r=(e+1)*s+i,l=this.distortionGrid[h],n=this.distortionGrid[a],d=this.distortionGrid[o],m=this.distortionGrid[r],c=l.x*this.dpr,p=l.y*this.dpr,u=(n.x-l.x)*this.dpr,g=(m.y-l.y)*this.dpr;if(!(!isFinite(u)||!isFinite(g)||u<=0||g<=0)){t.save(),t.beginPath(),t.moveTo(l.x+l.offsetX,l.y+l.offsetY),t.lineTo(n.x+n.offsetX,n.y+n.offsetY),t.lineTo(d.x+d.offsetX,d.y+d.offsetY),t.lineTo(m.x+m.offsetX,m.y+m.offsetY),t.closePath(),t.clip();try{t.drawImage(this.sourceCanvas,c,p,u,g,l.x+l.offsetX,l.y+l.offsetY,n.x-l.x,m.y-l.y)}catch(t){}t.restore()}}}drawHorizonBands(){if(!this.horizonBands||0===this.horizonBands.length)return;const t=this.ctx,s=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210,i=this.horizonBands.length>1?this.horizonBands.length-1:1;t.save(),t.globalCompositeOperation="lighter",this.horizonBands.forEach((e,h)=>{const a=h/i,o=this.height*(.45+.4*a+.08*this.bgPalette.parallax),r=this.height*(.08+.12*a);t.beginPath();for(let s=0;s<=48;s++){const i=s/48,h=i*this.width,l=Math.sin(i*Math.PI*(2.2+3.6*a)+this.distortionPhase*(.6+.9*a)+e.waveSeed+e.offset*Math.PI*2)*e.amplitude,n=this.smoothedStereo*(1-a)*36,d=o+l+Math.cos(i*Math.PI*6+1.5*this.distortionPhase)*e.amplitude*.22+n;0===s?t.moveTo(h,d-.6*r):t.lineTo(h,d-.6*r)}for(let s=48;s>=0;s--){const i=s/48,h=i*this.width,l=Math.sin(i*Math.PI*(2.2+3.2*a)+this.distortionPhase*(.7+a)+1.1*e.waveSeed+e.offset*Math.PI*2)*e.amplitude,n=this.smoothedStereo*(1-a)*36,d=o+l+.6*r+Math.sin(i*Math.PI*7+1.7*this.distortionPhase)*e.amplitude*.19+n;t.lineTo(h,d)}t.closePath();const l=((s+e.hueShift)%360+360)%360,n=t.createLinearGradient(0,o-r,0,o+r),d=Math.max(6,Math.min(76,e.brightness));n.addColorStop(0,`hsla(${l}, 65%, ${Math.max(6,.35*d)}%, 0)`),n.addColorStop(.4,`hsla(${l}, 72%, ${Math.min(74,d)}%, ${Math.min(.7,.25+.45*this.distortionIntensity)})`),n.addColorStop(1,`hsla(${(l+20)%360}, 78%, ${Math.max(12,.85*d)}%, 0)`),t.globalAlpha=Math.min(1,.2+.35*a+.32*this.distortionIntensity+.18*this.hazePulse),t.fillStyle=n,t.fill()}),t.restore()}drawRefractionVeils(){if(!this.veilLayers||0===this.veilLayers.length)return;const t=this.ctx,s=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210;t.save(),t.globalCompositeOperation="screen",this.veilLayers.forEach((i,e)=>{const h=.04*this.warpAmplitude+18*i.turbulence,a=this.height*(.12+.1*i.stretch),o=this.height*(.18+.22*e);t.beginPath();for(let s=0;s<=36;s++){const r=s/36,l=r*this.width,n=o+Math.sin(r*Math.PI*(3+1.5*e)+this.distortionPhase*(1+.32*e)+i.offset)*h+Math.cos(r*Math.PI*6+1.5*i.offset)*h*.5;0===s?t.moveTo(l,n-.45*a):t.lineTo(l,n-.45*a)}for(let s=36;s>=0;s--){const r=s/36,l=r*this.width,n=o+Math.sin(r*Math.PI*(3.4+1.4*e)+this.distortionPhase*(1.1+.3*e)+i.offset+Math.sin(i.angle))*h+.55*a+Math.sin(r*Math.PI*4+1.4*this.distortionPhase)*h*.3;t.lineTo(l,n)}t.closePath();const r=((s+i.hueShift)%360+360)%360,l=t.createLinearGradient(0,o-a,0,o+a),n=Math.min(.65,i.opacity);l.addColorStop(0,`hsla(${(r+40)%360}, 80%, 70%, 0)`),l.addColorStop(.45,`hsla(${r}, 85%, ${40+10*e}%, ${n})`),l.addColorStop(.9,`hsla(${(r-20+360)%360}, 60%, 20%, 0)`),t.fillStyle=l,t.fill()}),t.restore()}drawThermalColumns(){if(!this.thermalColumns||0===this.thermalColumns.length)return;const t=this.ctx;t.save(),t.globalCompositeOperation="lighter",this.thermalColumns.forEach(s=>{const i=Math.max(4,s.width),e=Math.max(0,this.height-s.height),h=Number.isFinite(s.hue)?(s.hue%360+360)%360:40,a=t.createLinearGradient(s.x,e,s.x,this.height);a.addColorStop(0,`hsla(${(h+20)%360}, 85%, 72%, ${Math.min(.45,.6*s.alpha)})`),a.addColorStop(.4,`hsla(${h}, 90%, 55%, ${Math.min(.7,s.alpha)})`),a.addColorStop(1,`hsla(${(h-18+360)%360}, 80%, 25%, 0)`);const o=Math.sin(1.5*s.phase)*i*.25;t.globalAlpha=Math.min(1,s.alpha),t.fillStyle=a,t.shadowColor=`hsla(${h}, 90%, 65%, ${Math.min(.7,s.alpha)})`,t.shadowBlur=25+35*s.energy,t.beginPath(),t.moveTo(s.x-.6*i-o,this.height),t.lineTo(s.x-.35*i,e),t.bezierCurveTo(s.x-.2*i,e-.1*i,s.x+.2*i,e-.2*i,s.x+.35*i,e),t.lineTo(s.x+.6*i-o,this.height),t.closePath(),t.fill()}),t.restore()}drawEnergyStreams(){const t=this.ctx,s=this.distortionPhase,i=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210,e=this.map(this.distortionIntensity,0,1,.08,.34)+.25*this.smoothedFlux;t.globalAlpha=Math.min(.8,e);for(let e=0;e<8;e++){const h=e/8*70,a=this.lerp(this.smoothedBass,this.smoothedFlux,e/7),o=e/7*this.height*(.4+.4*this.bgPalette.parallax)+.05*this.height,r=((i+h+140*a)%360+360)%360;t.strokeStyle=`hsla(${r}, 85%, ${50+20*a}%, ${.4+.5*a})`,t.lineWidth=1.2+4.5*a+2.2*this.distortionIntensity,t.beginPath();for(let i=0;i<this.width;i+=5){const h=i/this.width,r=o+Math.sin(h*Math.PI*(4+.4*e)+s*(1.1+.05*e)+e)*(26+85*a)*this.distortionIntensity+Math.sin(h*Math.PI*12+2.4*s+1.3*e)*(this.smoothedPresence??0)*18;0===i?t.moveTo(i,r):t.lineTo(i,r)}t.stroke()}t.globalAlpha=1}drawGlitchParticles(){const t=this.ctx;for(const s of this.glitchParticles){t.globalAlpha=s.alpha,t.fillStyle=s.color,t.fillRect(s.x,s.y,s.width,s.height),t.globalAlpha=.5*s.alpha,t.fillStyle="#ffffff";for(let i=0;i<s.height;i+=3)t.fillRect(s.x,s.y+i,s.width,1)}t.globalAlpha=1}drawExplosionWaves(){const t=this.ctx;for(const s of this.explosionWaves){const i=Math.max(0,s.radius-s.thickness/2),e=Math.max(i+1,s.radius+s.thickness/2),h=t.createRadialGradient(s.x,s.y,i,s.x,s.y,e),a=Number.isFinite(this.tintHue)?(this.tintHue%360+360)%360:210;h.addColorStop(0,`hsla(${a}, 100%, 60%, 0)`),h.addColorStop(.5,`hsla(${a}, 100%, 60%, ${s.alpha})`),h.addColorStop(1,`hsla(${a}, 100%, 60%, 0)`),t.strokeStyle=h,t.lineWidth=s.thickness,t.beginPath(),t.arc(s.x,s.y,s.radius,0,2*Math.PI),t.stroke()}}drawGlassShards(){const t=this.glassOverlay.ctx;if(t.clearRect(0,0,this.width,this.height),!(this.glassOpacity<.05))for(const s of this.glassShards){t.save(),t.globalAlpha=s.alpha*this.glassOpacity,t.beginPath();const i=s.vertices;t.moveTo(i[0].x,i[0].y);for(let s=1;s<i.length;s++)t.lineTo(i[s].x,i[s].y);t.closePath(),t.fillStyle=`hsla(${this.tintHue+30}, 40%, 80%, 0.1)`,t.fill(),t.strokeStyle=`hsla(${this.tintHue+30}, 60%, 90%, 0.6)`,t.lineWidth=2,t.stroke(),t.strokeStyle="hsla(0, 0%, 100%, 0.8)",t.lineWidth=1,t.beginPath(),t.moveTo(i[0].x,i[0].y),t.lineTo(i[1].x,i[1].y),t.stroke(),t.restore()}}drawScanlines(){const t=this.ctx;t.globalAlpha=.03,t.fillStyle="#000000";for(let s=0;s<this.height;s+=4)t.fillRect(0,s,this.width,2);t.globalAlpha=1}createDynamicBackgroundGradient(t){const s=this.ctx.createLinearGradient(0,0,0,this.height),i=this.bgGradientStops;if(!i||0===i.length)return s.addColorStop(0,"#0a0520"),s.addColorStop(1,"#0d0618"),s;const e=this.bgPalette?.parallax??0,h=Number.isFinite(this.bgPalette?.baseHue)?(this.bgPalette.baseHue%360+360)%360:(t%360+360)%360,a=Number.isFinite(this.bgPalette?.accentHue)?(this.bgPalette.accentHue%360+360)%360:h,o=Number.isFinite(this.bgPalette?.shadowHue)?(this.bgPalette.shadowHue%360+360)%360:h,r=Number.isFinite(this.bgPalette?.zenithHue)?(this.bgPalette.zenithHue%360+360)%360:h,l=Number.isFinite(this.bgPalette?.duskHue)?(this.bgPalette.duskHue%360+360)%360:h,n=this.bgPalette?.lightness??12;return i.forEach((t,i)=>{const l=Math.min(1,Math.max(0,t.pos)),d=((this.lerp(this.lerp(h,a,l),this.lerp(o,r,l),.35)+t.hueShift+24*e*l)%360+360)%360,m=Math.max(20,Math.min(95,t.sat+25*this.hazePulse+35*this.distortionIntensity-2*i)),c=Math.max(4,Math.min(68,t.lightness+n*(.55+.45*l)));s.addColorStop(l,`hsla(${d}, ${m}%, ${c}%, 1)`)}),s.addColorStop(1,`hsla(${l}, 50%, ${Math.max(5,.6*n)}%, 1)`),s}onResize(){this.distortionGrid=this.createDistortionGrid(),this.generateBackgroundGradient(),this.glitchParticles=[],this.explosionWaves=[],this.glassShards=[]}destroy(){this.sourceCanvas=null,this.sourceCtx=null,super.destroy()}}"undefined"!=typeof window&&(window.MirageWeaverVisualizer=MirageWeaverVisualizer);