class DebugVisualizer extends BaseVisualizer{constructor(e=null,t={}){super(e,{backgroundColor:"#0a0a0a",force2d:!0,...t})}init(){this.dataOverlay=this.createOverlay("data",10),this.frequencyOverlay=this.createOverlay("frequency",11),this.smoothingFactor=.1,this.smoothedValues={},this.frequencyBands=32,this.frequencyBars=[],this.frequencyHistory=[],this.baseSize=Math.min(this.width,this.height)/30}onUpdate(e){e&&(["rms","energy","subBassEnergy","bassEnergy","lowMidEnergy","midEnergy","upperMidEnergy","presenceEnergy","trebleEnergy","brillianceEnergy","ultrassonicEnergy","centroid","flatness","spectralFlux","tempo","stereoBalance","bandCountActive","spectralCentroidNormalized","dominantFreq"].forEach(t=>{if(void 0!==e[t]){const l=e[t],i=this.smoothedValues[t]||l;this.smoothedValues[t]=i+(l-i)*this.smoothingFactor}}),this.processFrequencyData(e))}processFrequencyData(e){if(!e.frequencyLeft||!e.frequencyRight)return;const t=e.frequencyLeft,l=e.frequencyRight,i=t.length,a=Math.ceil(i/this.frequencyBands),r=[];for(let e=0;e<this.frequencyBands;e++){const s=e*a,n=Math.min(s+a,i);let o=0,c=0;for(let e=s;e<n;e++)o+=t[e],c+=l[e];const u=(o/(n-s)/255+c/(n-s)/255)/2;r.push(u)}if(0===this.frequencyBars.length)this.frequencyBars=r;else for(let e=0;e<r.length;e++)this.frequencyBars[e]=.7*this.frequencyBars[e]+.3*r[e]}onRender(){if(this.dataOverlay.ctx.clearRect(0,0,this.width,this.height),this.frequencyOverlay.ctx.clearRect(0,0,this.width,this.height),!this.currentAudioData)return;const e=this.currentAudioData,t=this.smoothedValues;this.renderDataPoints(e,t),this.renderFrequencyBars(e)}renderDataPoints(e,t){const l=this.dataOverlay.ctx;this.width;let i=20;l.font="12px monospace",l.textBaseline="top",l.fillStyle="#00ff00",l.font="bold 16px monospace",l.fillText("🎵 Audio Metrics",20,i),i+=25,[{title:"📊 Energy Metrics (9 Bands)",items:[{label:"RMS",value:t.rms,visual:"bar",max:1,unit:""},{label:"Overall Energy",value:t.energy,visual:"bar",max:1,unit:""},{label:"Sub-Bass (20-60Hz)",value:t.subBassEnergy,visual:"circle",max:1,color:"#8b0000",unit:""},{label:"Bass (60-250Hz)",value:t.bassEnergy,visual:"circle",max:1,color:"#ff6b6b",unit:""},{label:"Low-Mid (250-500Hz)",value:t.lowMidEnergy,visual:"circle",max:1,color:"#ff922b",unit:""},{label:"Mid (500Hz-1k)",value:t.midEnergy,visual:"circle",max:1,color:"#f59f00",unit:""},{label:"Upper-Mid (1k-2k)",value:t.upperMidEnergy,visual:"circle",max:1,color:"#fcc419",unit:""},{label:"Presence (2k-4k)",value:t.presenceEnergy,visual:"circle",max:1,color:"#51cf66",unit:""},{label:"Treble (4k-8k)",value:t.trebleEnergy,visual:"circle",max:1,color:"#74c0fc",unit:""},{label:"Brilliance (8k-16k)",value:t.brillianceEnergy,visual:"circle",max:1,color:"#b197fc",unit:""},{label:"Ultrasonic (16k+)",value:t.ultrassonicEnergy,visual:"circle",max:1,color:"#9c36b5",unit:""}]},{title:"🎯 Spectral Metrics",items:[{label:"Spectral Flux",value:t.spectralFlux,visual:"bar",max:.1,unit:""},{label:"Centroid (norm)",value:t.spectralCentroidNormalized,visual:"bar",max:1,unit:""},{label:"Flatness",value:t.flatness,visual:"bar",max:1,unit:""},{label:"Active Bands",value:e.bandCountActive,visual:"text",unit:"bins"},{label:"Dominant Freq",value:Math.round(t.dominantFreq),visual:"text",unit:"Hz"}]},{title:"🥁 Beat & Tempo",items:[{label:"Tempo",value:e.tempo,visual:"text",unit:"BPM"},{label:"Beat Phase",value:e.beatPhase?.toFixed(2),visual:"circle",max:1,color:"#ffd43b",unit:""},{label:"Is Beat",value:e.isBeat?"✓ YES":"○ no",visual:"text",unit:""},{label:"Bass Drop",value:e.bassDrop?"✓ YES":"○ no",visual:"text",unit:""}]},{title:"🔊 Stereo & Balance",items:[{label:"Stereo Balance",value:(t.stereoBalance??0).toFixed(2),visual:"bar",max:1,center:!0,unit:""},{label:"RMS Left",value:(e.rmsLeft??0).toFixed(3),visual:"bar",max:1,unit:""},{label:"RMS Right",value:(e.rmsRight??0).toFixed(3),visual:"bar",max:1,unit:""},{label:"Bass Stereo",value:(e.bassStereo??0).toFixed(2),visual:"bar",max:1,center:!0,unit:""},{label:"Mid Stereo",value:(e.midStereo??0).toFixed(2),visual:"bar",max:1,center:!0,unit:""}]},{title:"📈 A-Weighted Audio",items:[{label:"Mono RMS (dB)",value:(e.aWeighted?.mono?.db??-1/0).toFixed(1),visual:"text",unit:"dB"},{label:"Mono Normalized",value:(e.aWeighted?.mono?.normalized??0).toFixed(3),visual:"bar",max:1,unit:""},{label:"Left RMS (dB)",value:(e.aWeighted?.left?.db??-1/0).toFixed(1),visual:"text",unit:"dB"},{label:"Right RMS (dB)",value:(e.aWeighted?.right?.db??-1/0).toFixed(1),visual:"text",unit:"dB"}]}].forEach((e,t)=>{i>this.height-150||(l.fillStyle="#ffaa00",l.font="bold 12px monospace",l.fillText(e.title,20,i),i+=18,l.font="10px monospace",e.items.forEach(e=>{if(i>this.height-160)return;const t=e.value;l.fillStyle="#cccccc",l.fillText(`${e.label}:`,20,i);let a=160;if(this.baseSize,"bar"===e.visual){const r=80,s=8,n=Math.min(1,Math.max(0,t/e.max));l.fillStyle="#222222",l.fillRect(a,i+1,r,s),l.fillStyle=e.color||"#00ff00",l.fillRect(a,i+1,r*n,s),l.strokeStyle="#666666",l.lineWidth=1,l.strokeRect(a,i+1,r,s),a+=r+10}else if("circle"===e.visual){const r=6,s=Math.min(1,Math.max(0,t/e.max));l.fillStyle="#222222",l.beginPath(),l.arc(a+r,i+6,r,0,2*Math.PI),l.fill(),l.fillStyle=e.color||"#00ff00",l.beginPath(),l.arc(a+r,i+6,r*s,0,2*Math.PI),l.fill(),l.strokeStyle="#666666",l.lineWidth=1,l.beginPath(),l.arc(a+r,i+6,r,0,2*Math.PI),l.stroke(),a+=2*r+10}l.fillStyle="#00ff00",l.font="10px monospace";const r="number"==typeof t?t.toFixed(3):t;l.fillText(`${r} ${e.unit}`,a,i),i+=22}),i+=5)})}renderFrequencyBars(e){const t=this.frequencyOverlay.ctx,l=.5*this.width+20,i=.5*this.width-40,a=.6*this.height;if(t.fillStyle="#00ff00",t.font="bold 16px monospace",t.fillText("📊 Frequency Spectrum Analysis",l,20),t.fillStyle="#1a1a1a",t.fillRect(l,50,i,a),t.strokeStyle="#444444",t.lineWidth=2,t.strokeRect(l,50,i,a),!this.frequencyBars||0===this.frequencyBars.length)return;const r=i/this.frequencyBands,s=a-20;this.frequencyBars.forEach((e,i)=>{const a=l+i*r+2,n=Math.min(1,e)*s,o=i/this.frequencyBands*360;t.fillStyle=`hsl(${o}, 100%, 50%)`,t.fillRect(a,50+s-n,r-2,n),t.strokeStyle="#ffffff",t.lineWidth=.5,t.strokeRect(a,50+s-n,r-2,n)}),t.fillStyle="#888888",t.font="10px monospace";const n=["20Hz","100Hz","250Hz","500Hz","1kHz","2kHz","5kHz","10kHz"];[0,Math.floor(.05*this.frequencyBands),Math.floor(.15*this.frequencyBands),Math.floor(.25*this.frequencyBands),Math.floor(.4*this.frequencyBands),Math.floor(.55*this.frequencyBands),Math.floor(.75*this.frequencyBands),this.frequencyBands-1].forEach((e,i)=>{const s=l+e*r;t.fillText(n[i],s,50+a+10)});let o=50+a+40;t.fillStyle="#cccccc",t.font="11px monospace",["Frequency Bins: 20Hz+ (High-Pass Filtered)",`Sub-Bass (20-60Hz): ${(e.subBassEnergy??0).toFixed(3)} | Bass (60-250Hz): ${(e.bassEnergy??0).toFixed(3)} | Low-Mid (250-500Hz): ${(e.lowMidEnergy??0).toFixed(3)} | Mid (500Hz-1k): ${(e.midEnergy??0).toFixed(3)} | Upper-Mid (1k-2k): ${(e.upperMidEnergy??0).toFixed(3)} | Presence (2k-4k): ${(e.presenceEnergy??0).toFixed(3)} | Treble (4k-8k): ${(e.trebleEnergy??0).toFixed(3)} | Brilliance (8k-16k): ${(e.brillianceEnergy??0).toFixed(3)} | Ultrasonic (16k+): ${(e.ultrassonicEnergy??0).toFixed(3)}`,`Peak Frequency: ${Math.round(e.dominantFreq??0)}Hz | Spectral Centroid: ${Math.round(e.centroid??0)}Hz`,`Active Bands: ${e.bandCountActive??0} | Spectral Flux: ${(e.spectralFlux??0).toFixed(3)}`].forEach((e,i)=>{t.fillText(e,l,o+16*i)});const c=l,u=o+60,f=.48*i;this.drawWaveform(t,e.timeDomainLeft,c,u,f,60,"#ff6b6b","Left"),this.drawWaveform(t,e.timeDomainRight,c+f+10,u,f,60,"#74c0fc","Right")}drawWaveform(e,t,l,i,a,r,s,n){if(!t)return;e.fillStyle="#1a1a1a",e.fillRect(l,i,a,r),e.strokeStyle="#444444",e.lineWidth=1,e.strokeRect(l,i,a,r),e.fillStyle=s,e.font="bold 11px monospace",e.fillText(n,l+5,i+5),e.strokeStyle=s,e.lineWidth=1.5,e.beginPath();const o=Math.ceil(t.length/a);let c=!1;for(let s=0;s<t.length;s+=o){const n=t[s]/255*2-1,o=l+s/t.length*a,u=i+r/2-n*(r/2);c?e.lineTo(o,u):(e.moveTo(o,u),c=!0)}e.stroke()}}"undefined"!=typeof window&&(window.DebugVisualizer=DebugVisualizer);