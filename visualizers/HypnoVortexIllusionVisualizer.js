class HypnoVortexIllusionVisualizer extends BaseVisualizer{constructor(t,i={}){super(t,{backgroundColor:"#000000",force2d:!0,smoothing:.25,sensitivity:1,debug:!1,...i}),this.t=0,this.ringCount=32,this.voiceFundamental=0,this.voiceOvertone=0,this.voiceAir=0,this.pulses=[],this.baseRadius=0,this.currentRadius=0,this.stereo=0}onUpdate(t){this.t+=.006+.0025*t.midEnergy,this.bass=.0025*t.bassEnergy,this.mid=.0022*t.midEnergy,this.high=9e-4*t.trebleEnergy,this.stereo=1.6*t.stereoBalance;const i=[["subBassEnergy",260],["bassEnergy",220],["lowMidEnergy",180],["midEnergy",140],["upperMidEnergy",90],["presenceEnergy",55],["trebleEnergy",25],["brillianceEnergy",300]];let e=i[0];for(let s of i)t[s[0]]>t[e[0]]&&(e=s);if(this.hue=e[1],this.voiceFundamental=.0028*t.lowMidEnergy+.0022*t.midEnergy,this.voiceOvertone=.0034*t.upperMidEnergy+.0032*t.presenceEnergy,this.voiceAir=.0012*t.trebleEnergy+.0014*t.brillianceEnergy,t.energyChangeIntensity>.035){const i=Math.min(1,3*t.energyChangeIntensity);this.pulses.push({r:0,alpha:.45+.55*i})}for(let i of this.pulses)i.r+=.05*this.baseRadius+100*t.energy,i.alpha*=.94;this.pulses=this.pulses.filter(t=>t.alpha>.01)}onRender(){const t=this.ctx,i=.5*this.width,e=.5*this.height;t.fillStyle="rgba(0,0,0,0.2)",t.fillRect(0,0,this.width,this.height);const s=.45*Math.min(this.width,this.height),h=this.t+.4*this.stereo,n=1.2*-this.t+.4*this.stereo,r=120*this.bass+80*this.mid;for(let s of this.pulses){const h=t.createRadialGradient(i,e,.3*s.r,i,e,s.r);h.addColorStop(0,`hsla(${this.hue}, 100%, 75%, ${.55*s.alpha})`),h.addColorStop(1,`hsla(${this.hue}, 100%, 50%, 0)`),t.fillStyle=h,t.beginPath(),t.arc(i,e,s.r,0,2*Math.PI),t.fill()}for(let o=1;o<=this.ringCount;o++){const a=(1.6180339887*o%this.ringCount+18*this.t)%this.ringCount,l=a/this.ringCount,g=s*l*(1+.35*l)*(1+this.voiceFundamental*Math.sin(2*this.t+.15*o)+this.voiceOvertone*Math.sin(6*this.t+.4*o)+this.voiceAir*Math.sin(14*this.t+1.1*o)),u=Math.max(1,5-.12*o);t.lineWidth=u;const d=o%6==0;d&&(t.lineWidth*=1.9);const c=o%2==0?h:n,y=80;t.beginPath();for(let s=0;s<=y;s++){const h=s/y*Math.PI*2,n=g+Math.sin(4*h+3*c)*r*(o/this.ringCount),a=i+Math.cos(h+c)*n,l=e+Math.sin(h-.65*c)*n;0===s?t.moveTo(a,l):t.lineTo(a,l)}const p=(1-a/this.ringCount)*(.45+1.8*this.high),E=d?1.6*p:p;t.strokeStyle=`hsla(${this.hue+8*o}, 100%, ${d?75:60}%, ${E})`,t.stroke()}}}"undefined"!=typeof window&&(window.HypnoVortexIllusionVisualizer=HypnoVortexIllusionVisualizer);