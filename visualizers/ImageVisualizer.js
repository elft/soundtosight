class ImageVisualizer extends BaseVisualizer{constructor(t,e={}){super(t,{...e}),this.originalImage=null,this.imageLoaded=!1,this.imageAspectRatio=1,this.drawWidth=0,this.drawHeight=0,this.drawX=0,this.drawY=0,this.fileInput=null,this.setupImageUpload(),this.particles=[],this.maxParticles=8e3,this.particleSize=2,this.exploded=!1,this.freeze=!1,this.explosionIntensity=0,this.lastEnergy=0,this.reformTimer=0}async init(){}setupImageUpload(){this.fileInput&&this.fileInput.parentNode&&this.fileInput.parentNode.removeChild(this.fileInput),this.fileInput=document.createElement("input"),this.fileInput.type="file",this.fileInput.accept="image/*",this.fileInput.style.display="none",document.body.appendChild(this.fileInput),this.fileInput.addEventListener("change",t=>{const e=t.target.files?.[0];e&&this.loadImage(e).catch(t=>{})}),this.canvas.style.cursor="pointer",this.canvas.addEventListener("click",()=>{this.fileInput.click()})}openImageSelector(){this.fileInput?.click()}async loadImage(t){const e=new Image,i=URL.createObjectURL(t);return new Promise((t,s)=>{e.onload=()=>{this.originalImage=e,this.imageAspectRatio=e.width/e.height,this.calculateImageDimensions(),this.createParticles(),this.imageLoaded=!0,URL.revokeObjectURL(i),t()},e.onerror=()=>{URL.revokeObjectURL(i),s(new Error("Failed to load image"))},e.src=i})}calculateImageDimensions(){const t=this.width/this.height;this.imageAspectRatio>t?(this.drawWidth=this.width,this.drawHeight=this.width/this.imageAspectRatio):(this.drawHeight=this.height,this.drawWidth=this.height*this.imageAspectRatio),this.drawX=(this.width-this.drawWidth)/2,this.drawY=(this.height-this.drawHeight)/2}createParticles(){const t=document.createElement("canvas"),e=t.getContext("2d");t.width=this.drawWidth,t.height=this.drawHeight,e.drawImage(this.originalImage,0,0,t.width,t.height);const i=e.getImageData(0,0,t.width,t.height).data;this.particles=[];for(let e=0;e<t.height;e+=4)for(let s=0;s<t.width;s+=4){const h=4*(e*t.width+s);i[h+3]>128&&this.particles.length<this.maxParticles&&this.particles.push({ox:s+this.drawX,oy:e+this.drawY,x:s+this.drawX,y:e+this.drawY,z:0,vx:0,vy:0,vz:0,color:`rgb(${i[h]},${i[h+1]},${i[h+2]})`})}}onResize(){this.imageLoaded&&(this.calculateImageDimensions(),this.createParticles())}onUpdate(t){if(!this.imageLoaded)return;const e=t.rms??0,i=t.bassEnergy??0,s=t.aWeighted?.mono?.normalized??e,h=e-this.lastEnergy;this.lastEnergy=e,(t.isMassiveEnergyChange||h>.25)&&(this.exploded=!this.exploded,this.explosionIntensity=40+100*i,this.freeze=!1),this.freeze=s<.05,this.reformTimer+=.05+(t.tempo??120)/6e3;const a=.5*Math.sin(this.reformTimer)+.5;for(const t of this.particles)if(!this.freeze)if(this.exploded)t.vx+=(Math.random()-.5)*this.explosionIntensity*.03,t.vy+=(Math.random()-.5)*this.explosionIntensity*.03,t.vz+=(Math.random()-.5)*this.explosionIntensity*.02,t.vx*=.96,t.vy*=.96,t.vz*=.96,t.x+=t.vx,t.y+=t.vy,t.z+=t.vz;else{const e=t.ox-t.x,i=t.oy-t.y,s=0-t.z;t.vx+=.02*e*(.5+a),t.vy+=.02*i*(.5+a),t.vz+=.02*s,t.vx*=.9,t.vy*=.9,t.vz*=.9,t.x+=t.vx,t.y+=t.vy,t.z+=t.vz}this.explosionIntensity*=.95}onRender(){if(!this.imageLoaded)return;const t=this.ctx;t.clearRect(0,0,this.width,this.height),t.save(),t.globalCompositeOperation="lighter";for(const e of this.particles){const i=1+.003*e.z,s=this.particleSize*i;t.fillStyle=e.color,t.beginPath(),t.arc(e.x,e.y,s,0,2*Math.PI),t.fill()}t.restore()}destroy(){this.fileInput&&this.fileInput.parentNode&&this.fileInput.parentNode.removeChild(this.fileInput),this.particles=[],super.destroy()}}"undefined"!=typeof window&&(window.ImageVisualizer=ImageVisualizer);